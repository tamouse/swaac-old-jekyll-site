<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software as a Craft</title>
    <description>The development blog of tamouse</description>
    <link>http://swaac.tamouse.org/</link>
    <atom:link href="http://swaac.tamouse.org/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 21 Nov 2016 08:30:48 -0600</pubDate>
    <lastBuildDate>Mon, 21 Nov 2016 08:30:48 -0600</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>installing emacs on Mac with homebrew</title>
        <description>&lt;p&gt;Here’s the latest that seems to work for me:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew cask install emacs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This installed version 25.1.1 on 14 Nov 2016.&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Nov 2016 10:09:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/emacs/2016/11/14/installing-emacs-on-mac-with-homebrew/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/emacs/2016/11/14/installing-emacs-on-mac-with-homebrew/</guid>
        
        <category>mac</category>
        
        <category>osx</category>
        
        <category>emacs</category>
        
        <category>homebrew</category>
        
        
        <category>emacs</category>
        
      </item>
    
      <item>
        <title>Installing WordPress Things Without FTP</title>
        <description>&lt;p&gt;Recently having set up a couple of WordPress sandbox areas, which
would not have any FTP access points for upgrading and installing WP
themes and plugins, I ran across this feature where the WP install can
“reach out” and pull in the items it needs, rather than telling the WP
repository to push the items to the site.&lt;/p&gt;

&lt;p&gt;In the &lt;a href=&quot;https://codex.wordpress.org/Editing_wp-config.php#WordPress_Upgrade_Constants&quot; title=&quot;WordPress Upgrade Constants&quot; target=&quot;_blank&quot;&gt;codex&lt;/a&gt;
there is a section on “WordPress Upgrade Constants”, and in particular
it describes &lt;code class=&quot;highlighter-rouge&quot;&gt;FS_METHOD&lt;/code&gt; which turns the nature of installing upgrades
around.&lt;/p&gt;

&lt;p&gt;By adding the following line to the &lt;code class=&quot;highlighter-rouge&quot;&gt;wp-config.php&lt;/code&gt; file, you can
enable this behaviour:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;define(&#39;FS_METHOD&#39;, &#39;direct&#39;);&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Putting that at the end of the file turns on this ability, which was a
revelation for working on these sandbox sites.&lt;/p&gt;

&lt;p&gt;This is what the page has to say:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;FS_METHOD forces the filesystem method. It should only be “direct”, “ssh2”, “ftpext”, or “ftpsockets”. Generally, you should only change this if you are experiencing update problems. If you change it and it doesn’t help, change it back/remove it. Under most circumstances, setting it to ‘ftpsockets’ will work if the automatically chosen method does not. Note that your selection here has serious security implications. If you are not familiar with them, you should seek help before making a change.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;(Primary Preference) “direct” forces it to use Direct File I/O requests from within PHP. It is the option chosen by default.&lt;/li&gt;
    &lt;li&gt;(Secondary Preference) “ssh2” is to force the usage of the SSH PHP Extension if installed&lt;/li&gt;
    &lt;li&gt;(3rd Preference) “ftpext” is to force the usage of the FTP PHP Extension for FTP Access, and finally&lt;/li&gt;
    &lt;li&gt;(4th Preference) “ftpsockets” utilises the PHP Sockets Class for FTP Access.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;I chose to use &lt;code class=&quot;highlighter-rouge&quot;&gt;direct&lt;/code&gt; for the sandboxes.&lt;/p&gt;

&lt;p&gt;Take the warning about security implications seriously. You don’t want
any production servers to be able to update if someone gains access.&lt;/p&gt;

&lt;p&gt;I’ve handled production upgrades by moving the updated software up to
the production machine myself &lt;em&gt;after&lt;/em&gt; testing the upgrades. There is
&lt;em&gt;no&lt;/em&gt; FTP (secure or otherwise) on my production installations. BTDT
got burned badly.&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Nov 2016 00:21:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/wordpress/2016/11/14/installing-wordpress-things-without-ftp/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/wordpress/2016/11/14/installing-wordpress-things-without-ftp/</guid>
        
        <category>installation</category>
        
        <category>plugins</category>
        
        <category>themes</category>
        
        
        <category>wordpress</category>
        
      </item>
    
      <item>
        <title>FrontendMasters Course: DevOps for Frontend Devs</title>
        <description>&lt;p&gt;On November 11, 2016, I attended
the &lt;a href=&quot;https://frontendmasters.com&quot; target=&quot;_blank&quot;&gt;FrontendMasters&lt;/a&gt;
course “DevOps for Frontend Devs” taught
by &lt;a href=&quot;https://jemyoung.com/about/&quot; target=&quot;_blank&quot;&gt;Jem Young&lt;/a&gt; from
Netflix.&lt;/p&gt;

&lt;p&gt;It was a great class. Here’s the checklist I built for bringing up a
basic droplet on &lt;a href=&quot;https://digitalocean.com&quot; target=&quot;_blank&quot;&gt;Digital Ocean&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;create-an-ssh-key-pair&quot;&gt;create an ssh key pair&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;you cna reuse one you already have, or create a new one&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;create-a-new-server&quot;&gt;create a new server&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] create a droplet on DO&lt;/li&gt;
  &lt;li&gt;[ ] copy and save the new droplet’s IP address
    &lt;ul&gt;
      &lt;li&gt;[ ] add to /etc/hosts to make it easy&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[ ] upload the PUBLIC key you created or are reusing&lt;/li&gt;
  &lt;li&gt;[ ] log into the new droplet: &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh -i $HOME/.ssh/id_rsa
    root@$NEW_IP&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;on-the-new-server-as-root&quot;&gt;on the new server, as root&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] Change root password to something you know (DO set’s it to
something randome and never tells you what it is.)
    &lt;ul&gt;
      &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;passwd&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get update&lt;/code&gt; to refresh DPKG indexes&lt;/li&gt;
  &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get install -y htop&lt;/code&gt; nice top() replacement&lt;/li&gt;
  &lt;li&gt;[ ] add user &lt;code class=&quot;highlighter-rouge&quot;&gt;tamara&lt;/code&gt;:
    &lt;ul&gt;
      &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;adduser tamara&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;usermod -aG sudo tamara&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[ ] add new user &lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;adduser git&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;usermod -aG sudo git&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;back-on-the-home-machine&quot;&gt;back on the home machine&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] move public key to users
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Users: [tamara, git]&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat ~/.ssh/is_rsa.pub | ssh $USERa@$NEW_SERVER &#39;mkdir -p .ssh &amp;amp;&amp;amp; cat &amp;gt;&amp;gt; .ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;on-new-server-regular-user-from-now-on&quot;&gt;on new server, regular user (from now on)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Disable access via &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo vi /etc/ssh/sshd_config&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;[ ] Set &lt;code class=&quot;highlighter-rouge&quot;&gt;PermitRootLogin: no&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;[ ] restart: &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo service sshd restart&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;ssh works too&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;get-a-domain-name&quot;&gt;get a domain name&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] buy a domain name from some place&lt;/li&gt;
  &lt;li&gt;[ ] for the domain, create 2 “A” records
    &lt;ul&gt;
      &lt;li&gt;[ ] “@” point to new server’s IP&lt;/li&gt;
      &lt;li&gt;[ ] “www” point to new server’s IP&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[ ]&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;set-up-the-web-server&quot;&gt;set up the web server&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] install nginx&lt;/li&gt;
  &lt;li&gt;[ ] install nodejs and npm&lt;/li&gt;
  &lt;li&gt;[ ] symlink node -&amp;gt; nodejs&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;setting-up-the-application&quot;&gt;setting up the application&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] clone the app&lt;/li&gt;
  &lt;li&gt;[ ] cd into the app dir&lt;/li&gt;
  &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;node app.js&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;nohup node app.js &amp;amp;&lt;/code&gt; to make it run forever in the background&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;build-and-deploy-an-app&quot;&gt;build and deploy an app&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;using Gulp&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 13 Nov 2016 12:52:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/class/2016/11/13/frontendmasters-course-devops-for-frontend-devs/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/class/2016/11/13/frontendmasters-course-devops-for-frontend-devs/</guid>
        
        <category>frontendmasters</category>
        
        <category>devops</category>
        
        <category>jemyoung</category>
        
        
        <category>class</category>
        
      </item>
    
      <item>
        <title>Links from GDI Intro to WordPress Class</title>
        <description>&lt;p&gt;I was teaching a WordPress class this past Saturday (12 Nov 2016) that
was a huge amount of fun.&lt;/p&gt;

&lt;p&gt;At the end of the class, my co-teacher started dumping out links, and
I tried to capture them. No guarantees I got them all!&lt;/p&gt;

&lt;h2 id=&quot;good-links-for-learning-wordpress&quot;&gt;Good links for learning WordPress&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/196G0XINo_NKzi39lAld5Y4FccUN_sOiV5MmhhFBcNT4/edit&quot; title=&quot;class slides&quot; target=&quot;_blank&quot;&gt;class slides&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://cloud.digitalocean.com/droplets&quot; target=&quot;_blank&quot;&gt;Digital Ocean Droplets&lt;/a&gt; when you want to run your own server&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://getflywheel.com/&quot; target=&quot;_blank&quot;&gt;Flywheel Hosting&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://serverpress.com/get-desktopserver/&quot; target=&quot;_blank&quot;&gt;Desktop Server&lt;/a&gt; for easier migrating from development to production&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://codex.wordpress.org/&quot; title=&quot;The codex&quot; target=&quot;_blank&quot;&gt;The WordPress Codex&lt;/a&gt; the ultimate guide to WordPress&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://developer.wordpress.org/files/2014/10/template-hierarchy.png&quot; target=&quot;_blank&quot;&gt;Template Hierarchy Diagram&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://codex.wordpress.org/Child_Themes&quot; target=&quot;_blank&quot;&gt;Child Themes&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://wptavern.com/&quot; target=&quot;_blank&quot;&gt;WordPress Tavern&lt;/a&gt; for news and info on your
quest to learn WordPress&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://torquemag.io/&quot; target=&quot;_blank&quot;&gt;Torque Mag&lt;/a&gt; news about WordPress development&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://chrislema.com/blog/&quot; target=&quot;_blank&quot;&gt;Chris Lema’s blog&lt;/a&gt; really good source
of information&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://wp.zacgordon.com/&quot; target=&quot;_blank&quot;&gt;Zac Gordon’s Blog&lt;/a&gt; about learning WordPress&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.wp101.com/wordpress-tutorials/&quot; target=&quot;_blank&quot;&gt;WordPress Tutorials&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://bobwp.com/&quot; target=&quot;_blank&quot;&gt;BobWP’s blog&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.wpbeginner.com/&quot; target=&quot;_blank&quot;&gt;WordPress Beginner&lt;/a&gt; resources for the
WP noob&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.wp-bff.com/&quot; target=&quot;_blank&quot;&gt;WP BFF&lt;/a&gt; home of the &lt;a href=&quot;http://www.wordpressally.com/5daychallenge&quot; target=&quot;_blank&quot;&gt;5-day Website Challenge&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://digwp.com/book/&quot; target=&quot;_blank&quot;&gt;Digital WordPress Book&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 13 Nov 2016 12:25:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/wordpress/2016/11/13/links-from-gdi-intro-to-wordpress-class/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/wordpress/2016/11/13/links-from-gdi-intro-to-wordpress-class/</guid>
        
        <category>links</category>
        
        <category>wordpress</category>
        
        <category>class</category>
        
        <category>gdi</category>
        
        
        <category>wordpress</category>
        
      </item>
    
      <item>
        <title>Signing a PDF with Preview</title>
        <description>&lt;p&gt;Here’s something I learned the other day: you can capture a graphical signature with Preview on macos to sign a PDF document.&lt;/p&gt;

&lt;p&gt;In the &lt;code class=&quot;highlighter-rouge&quot;&gt;Tools -&amp;gt; Annote -&amp;gt; Signatures&lt;/code&gt; menu, you’ll find a menu
item &lt;code class=&quot;highlighter-rouge&quot;&gt;Manage Signatures&lt;/code&gt; plus any signature you may have already added
to Preview.&lt;/p&gt;

&lt;p&gt;If you click it, you get the opportunity to create a new signature.&lt;/p&gt;

&lt;p&gt;Now, here comes the really cool part:&lt;/p&gt;

&lt;p&gt;You can enter a signature using a pointing device of your choice,
&lt;strong&gt;OR&lt;/strong&gt; you can take a picture of a signature with the web camera!&lt;/p&gt;

&lt;p&gt;I don’t know about you, but I have an awfully hard time getting a
decent looking signature with any pointing device: mouse, trackpad,
track pointer, track ball, even a graphics tablet and stylus
combination. Nothing feels right for me like pen on paper.&lt;/p&gt;

&lt;p&gt;Making a pen-and-paper signature now can be transfered into a PDF
directly, and this means no printing, signing, and scanning back in.&lt;/p&gt;

&lt;p&gt;This has probably existed for ages, but it’s something I just
learned. Never too young. :)&lt;/p&gt;
</description>
        <pubDate>Wed, 12 Oct 2016 11:55:00 -0500</pubDate>
        <link>http://swaac.tamouse.org/tools/2016/10/12/signing-a-pdf-with-preview/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/tools/2016/10/12/signing-a-pdf-with-preview/</guid>
        
        <category>tools</category>
        
        <category>signing</category>
        
        <category>pdf</category>
        
        <category>preview</category>
        
        <category>mac</category>
        
        <category>macos</category>
        
        
        <category>tools</category>
        
      </item>
    
      <item>
        <title>Testing blur() events in Cucumber/Capybara</title>
        <description>&lt;p&gt;After banging my head on this problem for a long time, chasing blog
posts, stackoverflow, lots of opinions, bug reports, and so on, I
finally asked my workmates, and together we arrived at a method that
works.&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;/h2&gt;

&lt;p&gt;There is apparently a bug, although it’s marked as INVALID in
bugzilla, that prevents &lt;code class=&quot;highlighter-rouge&quot;&gt;focus()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;blur()&lt;/code&gt; events from being
executed directly when the test browser is not focused.&lt;/p&gt;

&lt;p&gt;The links I chased:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://github.com/mattheworiordan/jquery-focus-selenium-webkit-fix&lt;/li&gt;
  &lt;li&gt;https://github.com/mattheworiordan/jquery-focus-selenium-webkit-fix/blob/master/app/assets/javascripts/jquery.focus.test-fix.js&lt;/li&gt;
  &lt;li&gt;https://makandracards.com/makandra/12661-how-to-solve-selenium-focus-issues&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And many many more…&lt;/p&gt;

&lt;h2 id=&quot;what-worked&quot;&gt;What worked&lt;/h2&gt;

&lt;p&gt;The most obviously glaring thing to do is &lt;strong&gt;NOT&lt;/strong&gt; make this event
happen via executing a JS script, but by simply &lt;strong&gt;SENDING A TAB&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Here’s the step:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;When&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^I unfocus field (.*?)$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;field_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;field&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;field_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;native&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send_keys&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:tab&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That did the trick, and now we all have an uncle Bob.&lt;/p&gt;

&lt;p&gt;Thanks Nic and JD&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Oct 2016 16:18:00 -0500</pubDate>
        <link>http://swaac.tamouse.org/testing/2016/10/10/testing-blur-events-in-cucumber-slash-capybara/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/testing/2016/10/10/testing-blur-events-in-cucumber-slash-capybara/</guid>
        
        <category>testing</category>
        
        <category>cucumber</category>
        
        <category>steps</category>
        
        <category>capybara</category>
        
        <category>blur</category>
        
        <category>focus</category>
        
        <category>using</category>
        
        <category>send_keys</category>
        
        
        <category>testing</category>
        
      </item>
    
      <item>
        <title>How to set up your own private git repository on a remote server</title>
        <description>&lt;p&gt;This is an old article from my ancient wiki. I thought it was good to
bring forward. Some of the git SaaS providers allow you to create
private repositories, which are probably a better idea for
collaboration, but this is a useful alternative when you don’t want to
go the SaaS route.&lt;/p&gt;

&lt;h2 id=&quot;have-a-local-repo&quot;&gt;Have a local repo&lt;/h2&gt;

&lt;p&gt;Let’s just create a simple local repo to work with.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git init my_project
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;my_project
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;My Project&#39;&lt;/span&gt; &amp;gt; README.md
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git add .
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git commit -m &lt;span class=&quot;s1&quot;&gt;&#39;initial&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Great, now let’s get on with the remote stuff.&lt;/p&gt;

&lt;h2 id=&quot;set-up-the-server&quot;&gt;Set up the server&lt;/h2&gt;

&lt;p&gt;First, if you haven’t done so already, add your public key to the
server:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Don’t do this if you’ve already uploaded your public ssh key!)&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ssh myuser@server.com &lt;span class=&quot;s1&quot;&gt;&#39;mkdir -p .ssh&#39;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;cat .ssh/id_rsa.pub | ssh myuser@server.com &lt;span class=&quot;s1&quot;&gt;&#39;cat &amp;gt;&amp;gt; .ssh/authorized_keys&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will let you use git push without having to supply your password
every time.&lt;/p&gt;

&lt;h2 id=&quot;add-your-repositories&quot;&gt;Add your repositories&lt;/h2&gt;

&lt;p&gt;Login to the server:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ssh myuser@server.com
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Create a directory to keep all your remote repos in one place&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;mkdir Repos
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;Repos
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now we can create our remote repository:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git init --bare my_project.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note that I’ve chosen to mirror the local project directory name. This
is a pretty good practice, less confusion, less decision making. In
addition, I’ve appended &lt;code class=&quot;highlighter-rouge&quot;&gt;.git&lt;/code&gt; to the remote repo directory name,
which helps inform those things that care that this is a git
repository.&lt;/p&gt;

&lt;p&gt;If you have a look in the directory just created, it looks just like
the &lt;code class=&quot;highlighter-rouge&quot;&gt;.git&lt;/code&gt; directory in your local project. Hence the extension.&lt;/p&gt;

&lt;p&gt;With all that done, you can log out of the server.&lt;/p&gt;

&lt;h2 id=&quot;configure-your-development-machine&quot;&gt;Configure your development machine&lt;/h2&gt;

&lt;p&gt;To use the remote repository, we have to add it to the remotes
available in the local repository.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git remote add origin myuser@server.com:Repos/my_project.git
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git push origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You’ll probably also want to make sure you add a default merge and
remote:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git config branch.master.remote origin
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git config branch.master.merge refs/heads/master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that’s it!&lt;/p&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-scm.com/docs/git-init&quot;&gt;git &lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt; command&lt;/a&gt; to find out
about the &lt;code class=&quot;highlighter-rouge&quot;&gt;--bare&lt;/code&gt; option.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 08 Oct 2016 00:22:00 -0500</pubDate>
        <link>http://swaac.tamouse.org/git/2016/10/08/how-to-set-up-your-own-private-remote-git-repository/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/git/2016/10/08/how-to-set-up-your-own-private-remote-git-repository/</guid>
        
        <category>git</category>
        
        <category>remote</category>
        
        <category>server</category>
        
        <category>private</category>
        
        <category>howto</category>
        
        <category>tutorial</category>
        
        <category>tools</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>Link: MadeByMike - SVG Has More Potential</title>
        <description>&lt;p&gt;Nice little writeup on more stuff you can do with SVGs – more than I ever knew!!&lt;/p&gt;
</description>
        <pubDate>Mon, 26 Sep 2016 18:46:00 -0500</pubDate>
        <link>http://swaac.tamouse.org/links/2016/09/26/madebymike-svg-has-more-potential/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/links/2016/09/26/madebymike-svg-has-more-potential/</guid>
        
        <category>links</category>
        
        <category>svg</category>
        
        <category>css</category>
        
        <category>webdev</category>
        
        <category>image</category>
        
        
        <category>links</category>
        
      </item>
    
      <item>
        <title>My nginx Virtual Hosting Configuration</title>
        <description>&lt;p&gt;I’ve been running my static sites using &lt;a href=&quot;http://nginx.com&quot;&gt;nginx&lt;/a&gt; for ages, it seems,
and I came upon a pretty useful nginx configuration that doesn’t
require changing much to put up a new static site.&lt;/p&gt;

&lt;p&gt;Nginx’s configuration documentation requires a fair amount of digging
to put the whole thing together, but there have also been generous
folks who blog about their configuration work, triumphs and
tribulations.&lt;/p&gt;

&lt;p&gt;This configuration is by no means unique, special, or anything other
than a thing I cobbled together and that works for my needs.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nginx&quot; data-lang=&quot;nginx&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;# -*- nginx -*-
# This is a generic virtual host file, it will map vhosts onto
# the appropriate subdirectory
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;## listen for ipv4
&lt;/span&gt;    &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt;   &lt;span class=&quot;s&quot;&gt;[::]:80&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ipv6only=on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;## listen for ipv6
&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# the following matches anything in HTTP_HOST, mapping www.$domain to $domain.
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# www.example.com and example.com will map to /var/www/example.com
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# www.wiki.example.com and wiki.example.com will map to /var/www/wiki.example.com
&lt;/span&gt;    &lt;span class=&quot;kn&quot;&gt;server_name&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;^(www\.)?(?&amp;lt;domain&amp;gt;.+)$;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;root&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;/var/www/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;index&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;index.html&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.htm&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.php&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# Uncomment to use per-domain access log
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;#access_log  /var/log/nginx/$domain.access.log;
&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kn&quot;&gt;try_files&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$uri&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$uri&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/index.php&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@rewrites&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kn&quot;&gt;rewrite&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/index.php&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# This causes too many problems when posting a blog update.
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# # static files
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# location ~* \.(?:ico|css|js|gif|jpe?g|png|te?xt|html?)$ {
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;#     expires max;
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;#     add_header Pragma public;
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;#     add_header Cache-Control &quot;public, must-revalidate, proxy-revalidate&quot;;
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# }
&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/robots.txt&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;access_log&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;log_not_found&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/favicon.ico&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;access_log&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;log_not_found&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# deny access to . files and editor backup files
&lt;/span&gt;    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/\.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;deny&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;~$&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;deny&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# php files
&lt;/span&gt;    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;\.php&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;\..*/.*\.php$&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;404&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;kn&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fastcgi_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kn&quot;&gt;fastcgi_split_path_info&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;^(.+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.php)(/.+)&lt;/span&gt;$&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kn&quot;&gt;fastcgi_param&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PATH_INFO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$fastcgi_path_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kn&quot;&gt;fastcgi_param&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PATH_TRANSLATED&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$document_root$fastcgi_path_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kn&quot;&gt;fastcgi_param&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;SCRIPT_FILENAME&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$document_root$fastcgi_script_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kn&quot;&gt;fastcgi_pass&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unix:/var/run/php5-fpm.sock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I originally had the static file caching in place, but since I mainly
post blog updates that are static, it was always forcing readers to
refresh my pages in their browsers. I get such small amounts of
traffic that just serving the static pages hasn’t really made any
difference to my overall site performance, and everyone always gets
fresh content.&lt;/p&gt;

&lt;p&gt;This sets up a structure that recognizes virtual hosts and points them
to a directory that matches that host name. So
“http://swaac.tamouse.org” will look for &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/www/swaac.tamouse.org&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;On my server, I’ve also further symlinked &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/www/swaac.tamouse.org&lt;/code&gt;
to &lt;code class=&quot;highlighter-rouge&quot;&gt;/home/tamara/Sites/tamouse.org/swaac&lt;/code&gt; which holds the actual
static site files, and is writeable by my user without any need to go
superuser.&lt;/p&gt;

&lt;p&gt;Further discussion about how I deploy to these sites using git can be
found at &lt;a href=&quot;/deployment/2016/01/12/using-git-to-deploy-static-sites/&quot;&gt;Using Git to Deploy Static Sites&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 25 Sep 2016 13:29:00 -0500</pubDate>
        <link>http://swaac.tamouse.org/devops/2016/09/25/my-nginx-virtual-hosting-configuration/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/devops/2016/09/25/my-nginx-virtual-hosting-configuration/</guid>
        
        <category>nginx</category>
        
        <category>configuration</category>
        
        <category>virtualhosts</category>
        
        <category>web-hosting</category>
        
        <category>static-site</category>
        
        
        <category>devops</category>
        
      </item>
    
      <item>
        <title>Link: Building Resizeable Components with Relative CSS</title>
        <description>&lt;p&gt;Ahmad Shadeed provides a &lt;em&gt;deep&lt;/em&gt;, &lt;em&gt;long&lt;/em&gt;, and &lt;em&gt;excellent&lt;/em&gt; guest article on CSS Tricks.&lt;/p&gt;

&lt;p&gt;An excellent read, quite complete.&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Sep 2016 22:58:00 -0500</pubDate>
        <link>http://swaac.tamouse.org/css/2016/09/14/building-resizeable-components-with-relative-css/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/css/2016/09/14/building-resizeable-components-with-relative-css/</guid>
        
        <category>css</category>
        
        <category>relative</category>
        
        
        <category>css</category>
        
      </item>
    
  </channel>
</rss>
<!-- touch 1 -->
