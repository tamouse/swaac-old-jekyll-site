<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software as a Craft</title>
    <description>The development blog of tamouse</description>
    <link>http://swaac.tamouse.org/</link>
    <atom:link href="http://swaac.tamouse.org/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sat, 11 Feb 2017 02:03:50 -0600</pubDate>
    <lastBuildDate>Sat, 11 Feb 2017 02:03:50 -0600</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>Gitlab Database Outage Post-Mortem</title>
        <description>&lt;p&gt;Back at the end of January 2017, git SaaS
provider &lt;a href=&quot;https://gitlab.com&quot;&gt;Gitlab&lt;/a&gt; reported a disaster of epic
proportions:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;On January 31st 2017, we experienced a major service outage for one of our products, the online service GitLab.com. The outage was caused by an accidental removal of data from our primary database server.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;This incident caused the GitLab.com service to be unavailable for many hours. We also lost some production data that we were eventually unable to recover. Specifically, we lost modifications to database data such as projects, comments, user accounts, issues and snippets, that took place between 17:20 and 00:00 UTC on January 31. Our best estimate is that it affected roughly 5,000 projects, 5,000 comments and 700 new user accounts. Code repositories or wikis hosted on GitLab.com were unavailable during the outage, but were not affected by the data loss. GitLab Enterprise customers, GitHost customers, and self-hosted GitLab CE users were not affected by the outage, or the data loss.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;They had destroyed the database holding all their repository
information, and then could not find any viable backups.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Today, 11 February 2017,&lt;/strong&gt; they released
a &lt;a href=&quot;https://about.gitlab.com/2017/02/10/postmortem-of-database-outage-of-january-31/&quot;&gt;post-mortem&lt;/a&gt; of the situation,
providing something few companies have &lt;em&gt;ever&lt;/em&gt; done: transparency and
openness into a major devops disaster so that &lt;em&gt;everyone&lt;/em&gt; can learn.&lt;/p&gt;

&lt;p&gt;They list several items in the Root Cause Analysis section, and
provide a list of mitigation and recovery improvements now underway.&lt;/p&gt;

&lt;h2 id=&quot;major-kudos-to-gitlab&quot;&gt;Major kudos to Gitlab!&lt;/h2&gt;
</description>
        <pubDate>Sat, 11 Feb 2017 01:54:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/devops/2017/02/11/gitlab-database-outage-post-mortem/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/devops/2017/02/11/gitlab-database-outage-post-mortem/</guid>
        
        <category>devops</category>
        
        <category>gitlab</category>
        
        <category>database-outage</category>
        
        <category>post-mortem</category>
        
        
        <category>devops</category>
        
      </item>
    
      <item>
        <title>Links: Flexbox tutorials and posts</title>
        <description>&lt;p&gt;Collecting several links on learning Flexbox:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://css-tricks.com/snippets/css/a-guide-to-flexbox/&quot;&gt;A Complete Guide to Flexbox  CSS-Tricks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://css-tricks.com/designing-a-product-page-layout-with-flexbox/&quot;&gt;Designing A Product Page Layout with Flexbox  CSS-Tricks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.freecodecamp.com/understanding-flexbox-everything-you-need-to-know-b4013d4dc9af#.dqbu8so8a&quot;&gt;Understanding Flexbox Everything you need to know&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://flexboxfroggy.com/&quot;&gt;Flexbox Froggy - A game for learning CSS flexbox&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://swaac.tamouse.org/css/2016/12/04/flexbox-website-with-fixed-headers-and-footer/&quot;&gt;flexbox website with fixed headers and footer&lt;/a&gt; (personal
project)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 07 Feb 2017 20:02:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/css/2017/02/07/links-flexbox-tutorials-and-posts/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/css/2017/02/07/links-flexbox-tutorials-and-posts/</guid>
        
        <category>css</category>
        
        <category>flexbox</category>
        
        <category>links</category>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>TIL: Providing Defaults For EnvVars</title>
        <description>&lt;p&gt;&lt;strong&gt;Today I Learned:&lt;/strong&gt; that you can set a default for a missing
Environment Variable &lt;strong&gt;and&lt;/strong&gt; that an empty string is not the best
default.&lt;/p&gt;

&lt;p&gt;I’d been blissfully performing the following sort of passage when
dealing with envvars:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'FOO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;foo_setting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;envrion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'FOO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;foo_setting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is pretty wrong-headed in a few ways, including the fact that
some things expect a setting to be &lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt; instead to ensure they work
correctly. In particular, we were using this sort of thing to set the
profile name for &lt;code class=&quot;highlighter-rouge&quot;&gt;boto3&lt;/code&gt;. If the profile name is &lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt;, it doesn’t
try to connect, but if it’s the empty string &lt;code class=&quot;highlighter-rouge&quot;&gt;''&lt;/code&gt; it uses that for the
profile name, which of course will never work.&lt;/p&gt;

&lt;p&gt;So the proper construction is:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;foo_setting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'FOO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;saving us from an extraneous retrieval and test for a value.&lt;/p&gt;

&lt;p&gt;See more information
here:
&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.get&quot;&gt;dict.get()&lt;/a&gt;
in the Standard Type documentation.&lt;/p&gt;

&lt;p&gt;I should note that I only got there from finding
this:
&lt;a href=&quot;https://bugs.python.org/issue28242&quot;&gt;Issue 28242 os.environ.get documentation missing - Python tracker&lt;/a&gt;
via googling for “python3 os.environ get”, so it’s not exactly obvious
to the newcomer, like me. And this &lt;em&gt;after&lt;/em&gt; the lead on the team fixed
my oh so broken code. Yay for code reviews!&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Jan 2017 16:14:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/python/2017/01/24/til-providing-defaults-for-envvars/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/python/2017/01/24/til-providing-defaults-for-envvars/</guid>
        
        <category>envvars</category>
        
        <category>defaults</category>
        
        <category>TIL</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>TIL: Call done() to fire async mocha tests</title>
        <description>&lt;p&gt;Working on &lt;a href=&quot;/node.js/2017/01/16/my-first-proxy-slash-adapter-for-an-express-dot-js-app/&quot;&gt;my first express API call&lt;/a&gt;
this weekend, I learned something important for testing.&lt;/p&gt;

&lt;p&gt;I was running the test over and over and could not figure out why it
was just running to completion instead of performing the call.&lt;/p&gt;

&lt;p&gt;This was driving me nuts.&lt;/p&gt;

&lt;p&gt;Mocha has an added bit where it passes in a callback to tell it when
the asynchronous tests finish. This had completely eluded me, but one
of the HackTheGap mentors told me about it, and everything started to
work.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tests'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'does an async thing'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;do_an_async_thing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;be&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Passing &lt;code class=&quot;highlighter-rouge&quot;&gt;done&lt;/code&gt; to the &lt;code class=&quot;highlighter-rouge&quot;&gt;it&lt;/code&gt; function callback is what sets things in
motion. Mocha then knows there is some async piece to happen, and
calling &lt;code class=&quot;highlighter-rouge&quot;&gt;done()&lt;/code&gt; at the end of the test case signals back to mocha
that an async test has finished.&lt;/p&gt;

&lt;p&gt;Very important!&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Jan 2017 02:03:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/javascript/2017/01/16/til-call-done-to-fire-async-mocha-tests/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/javascript/2017/01/16/til-call-done-to-fire-async-mocha-tests/</guid>
        
        <category>mocha</category>
        
        <category>async</category>
        
        <category>testing</category>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>My First Proxy/Adapter for an Express.js app</title>
        <description>&lt;p&gt;Recently, I attended &lt;a href=&quot;https://hackthegap.com&quot;&gt;HackTheGap 2017&lt;/a&gt;, which
is an all-women hack-a-thon in the Twin Cities. (Huge fun!) Our team
built a web app using Node.js, Express.js, and MongoDB, mixing in a
little Python nltk for good
measure:
&lt;a href=&quot;https://github.com/BrainDumpShrinkBot/brain_dump_shrink_bot&quot;&gt;BrainDump/ShrinkBot&lt;/a&gt;.
This is the first serious Express app I’ve done from scratch, although
not too strenuous.&lt;/p&gt;

&lt;p&gt;One of the things we wanted was to be able to pull
some content from other sites based on some keywords (“tags”) that
were extracted from a diary / journal entry using nltk.&lt;/p&gt;

&lt;p&gt;One of those sources is &lt;a href=&quot;https://giphy.com&quot;&gt;Giphy&lt;/a&gt; with has an API in
Beta. The &lt;a href=&quot;https://github.com/Giphy/GiphyAPI&quot;&gt;Giphy API&lt;/a&gt; (github) is a
free for all way of accessing the fun animated GIFs stored on that
site.&lt;/p&gt;

&lt;h2 id=&quot;which-http-package&quot;&gt;Which HTTP package?&lt;/h2&gt;

&lt;p&gt;I tried a few different HTTP packages,
including &lt;a href=&quot;https://www.npmjs.com/package/superagent&quot;&gt;superagent&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/request&quot;&gt;request&lt;/a&gt;, and finally settling on
&lt;a href=&quot;https://www.npmjs.com/package/node-fetch&quot;&gt;node-fetch&lt;/a&gt;. I went with this latter because it is most familiar to
me from working in client-side JavaScript.&lt;/p&gt;

&lt;h2 id=&quot;the-giphy-api&quot;&gt;The Giphy API&lt;/h2&gt;

&lt;p&gt;The api is really very simple:&lt;/p&gt;

&lt;p&gt;The search URL is &lt;code class=&quot;highlighter-rouge&quot;&gt;http://api.giphy.com/v1/gifs/search&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Parameters are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;api_key&lt;/code&gt; - public beta api_key is ‘dc6zaTOxFJmzC’ (everyone gets
the same one)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;q&lt;/code&gt; - search terms or phrase&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;limit&lt;/code&gt; - number of hits to return&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;offset&lt;/code&gt; - skip this many hits before returning &lt;code class=&quot;highlighter-rouge&quot;&gt;limit&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rating&lt;/code&gt; - “y”, “g”, “pg”, “pg-13”, “r”&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lang&lt;/code&gt; - 2-letter language code, e.g. ‘en’&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fmt&lt;/code&gt; - ‘json’ or ‘html’&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Only &lt;code class=&quot;highlighter-rouge&quot;&gt;api_key&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;q&lt;/code&gt; are required.&lt;/p&gt;

&lt;p&gt;It returns by default a JSON structure with a whole pile of info. See
the repo’s README for actual information.&lt;/p&gt;

&lt;p&gt;The proxy/adapter I wrote was really quite simple. I created a module
with an IIFE that configured adapter and returned a method to call the
API.&lt;/p&gt;

&lt;p&gt;I wanted to be able to pass in configuration values for the various
pieces of the API. For this first pass, I kept things a bit locked
down.&lt;/p&gt;

&lt;p&gt;The consumer provides an array of tag strings to search for, and a
callback to process the return from the API.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cm&quot;&gt;/**
 * Getting a gif from Giphy: https://github.com/giphy/Giphyapi#search-endpoint
 */&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./../config'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'node-fetch'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch_giphy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;giphy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'?api_key='&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;giphy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;api_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;amp;q='&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;encodeURI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;amp;limit=1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;amp;rating=g'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ERROR!!!&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;fetch_giphy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch_giphy&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I wrote a mocha test for this as well, although I could probably do a
lot more in terms of verification:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'expect.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./../../config'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get_giphy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./../../services/get_giphy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'get_giphy tests'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'returns a json data block'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;get_giphy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetch_giphy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'funny'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;data: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;be&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;til-calling--to-fire-async-mocha-tests&quot;&gt;TIL: calling &lt;code class=&quot;highlighter-rouge&quot;&gt;done&lt;/code&gt; to fire async mocha tests&lt;/h2&gt;

&lt;p&gt;This particular thing was driving me nuts: I was running the test over
and over and could not figure out why it was just running to
completion instead of performing the call.&lt;/p&gt;

&lt;p&gt;Mocha has an added bit where it passes in a callback to tell it when
the asynchronous tests finish. This had completely eluded me, but one
of the HackTheGap mentors told me about it, and everything started to
work.&lt;/p&gt;

&lt;h2 id=&quot;follow-on-thoughts&quot;&gt;Follow-on thoughts&lt;/h2&gt;

&lt;p&gt;Although I’m specifying the API settings in a configuration object
that gets passed in, I’m not really allowing that to be injected. It
would be more helpful, maybe to export just the outer function itself,
and let the consumer pass in the configuration, thus allowing
injection per environment / use.&lt;/p&gt;

&lt;p&gt;I might also roll back to using &lt;code class=&quot;highlighter-rouge&quot;&gt;superagent&lt;/code&gt; as I like it’s way of
dealing with building query strings rather nice (just passing in an
Object) vs. presently with &lt;code class=&quot;highlighter-rouge&quot;&gt;fetch&lt;/code&gt; where I’m basically hard-coding
strings.&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Jan 2017 01:32:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/node.js/2017/01/16/my-first-proxy-slash-adapter-for-an-express-dot-js-app/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/node.js/2017/01/16/my-first-proxy-slash-adapter-for-an-express-dot-js-app/</guid>
        
        <category>node.js</category>
        
        <category>express.js</category>
        
        <category>javascript</category>
        
        <category>using-apis-from-javascript</category>
        
        
        <category>node.js</category>
        
      </item>
    
      <item>
        <title>JS App Config Pattern</title>
        <description>&lt;p&gt;Nothing really new here, just writing down this pattern I’ve noticed
in various JavaScript apps (notably &lt;a href=&quot;http://expressjs.com/&quot; title=&quot;Fast, unopinionated, minimalist web framework for Node.js&quot;&gt;Express&lt;/a&gt; apps). First seen in &lt;a href=&quot;https://twitter.com/scotups&quot; title=&quot;Scott Moss on Twitter&quot;&gt;Scott
Moss’s&lt;/a&gt; &lt;a href=&quot;https://frontendmasters.com/courses/api-design-nodejs/&quot; title=&quot;Learn API design in Node.js using Express class&quot;&gt;‘API Design’ course&lt;/a&gt; at
&lt;a href=&quot;https://frontendmasters.com&quot; title=&quot;Frontend Masters: Learn JavaScript, React, Angular and more,..deeply&quot;&gt;FrontendMasters&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;concept&quot;&gt;Concept&lt;/h2&gt;

&lt;p&gt;The basic concept is to collect all application configuration in one
place so you don’t have to litter it all over the application. Use a
“standard” JS component idea, as one does with Angular and React to put
it all into a single location.&lt;/p&gt;

&lt;h2 id=&quot;use-case&quot;&gt;Use Case&lt;/h2&gt;

&lt;p&gt;My use case will be a rather generic Express API application. Using a
service- or resource-oriented structure, I have an folder structures
like so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  app/
    posts/
      index.js
      postModel.js
      postsController.js
      postsRoutes.js
    users/
      index.js
      userModel.js
      usersContoller.js
      usersRoutes.js
    index.js
  config/
    development.js
    index.js
    production.js
    test.js
  public/
    images/
    javascripts/
    stylesheets/
    index.html
  index.js
  package.json
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I’m taking advantage of the convention of using an &lt;code class=&quot;highlighter-rouge&quot;&gt;index.js&lt;/code&gt; at the root
of the components (and app) to make requiring the module as simple as
providing the directory name.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-configuration-module&quot;&gt;Creating the configuration module&lt;/h2&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;./config/index.js&lt;/code&gt;, I have the following:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;baseConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'development'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;jwtSecret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JWT_SECRET&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;envConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;baseConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;baseConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;envConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A &lt;strong&gt;HUGE&lt;/strong&gt; caveat, of course, is to &lt;strong&gt;NEVER&lt;/strong&gt; save secrets and
credentials in git (or Github, Gitlab, BitBucket, etc.) since they
will be there forever, even if you later remove them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Always use environment variables to configure secret values.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;creating-the-environment-configurations&quot;&gt;Creating the environment configurations&lt;/h2&gt;

&lt;p&gt;The environment configurations would be the same as the environment
names with ‘.js’ added, so:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;development.js&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;testing.js&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;production.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of these can be empty, but the files need to exist.&lt;/p&gt;

&lt;p&gt;As an example, I always want logging during development, but not
during production or testing.&lt;/p&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;./config/development.js&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This would be merged during the &lt;code class=&quot;highlighter-rouge&quot;&gt;Object.assign&lt;/code&gt; step in
&lt;code class=&quot;highlighter-rouge&quot;&gt;./config/index.js&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;deep-merging&quot;&gt;Deep merging&lt;/h2&gt;

&lt;p&gt;The main limitation to the above is if the configuration has a deeper
structure. The above works great when everything is in the top level
of the configuration object, but as soon as you go deeper (objects
within objects, etc), you need to do a deep merge.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://lodash.com&quot; title=&quot;A modern JavaScript utility library delivering modularity, performance &amp;amp; extras.&quot;&gt;Lodash&lt;/a&gt; library has a few different methods that can be used
here. The one I like to use is &lt;code class=&quot;highlighter-rouge&quot;&gt;_.merge&lt;/code&gt; since it works like
&lt;code class=&quot;highlighter-rouge&quot;&gt;Object.assign&lt;/code&gt; in merging the members from left to
right. (See &lt;a href=&quot;http://stackoverflow.com/questions/19965844/lodash-difference-between-extend-assign-and-merge#19966511&quot; title=&quot;explanation of extend, assign, and merge in lodash&quot;&gt;stackoverflow&lt;/a&gt; for a more thorough explanation
and comparison.)&lt;/p&gt;

&lt;h2 id=&quot;using-the-configuration&quot;&gt;Using the configuration&lt;/h2&gt;

&lt;p&gt;Now, with my per-environment configuration set, I use it in my
application. In &lt;code class=&quot;highlighter-rouge&quot;&gt;./index.js&lt;/code&gt; (the root of the app), I put:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./config'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Deeper down, in a server component, for example, I need to use the
appropriate path lift to find it. Getting the configuration into the
posts controller:&lt;/p&gt;

&lt;p&gt;File &lt;code class=&quot;highlighter-rouge&quot;&gt;./app/posts/postsController.js&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'../../../config'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// might need more '../' to get to the right level&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When you need a configuration value, it’s right there on the &lt;code class=&quot;highlighter-rouge&quot;&gt;config&lt;/code&gt;
object:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'development'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// ... do something you only do in development&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 26 Dec 2016 09:06:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/javascript/2016/12/26/js-app-config-pattern/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/javascript/2016/12/26/js-app-config-pattern/</guid>
        
        <category>javascript</category>
        
        <category>application</category>
        
        <category>configuration</category>
        
        <category>config</category>
        
        <category>patterns</category>
        
        <category>webdev</category>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>Changing the &quot;Return To Shop&quot; link and text in an empty WooCommerce cart</title>
        <description>&lt;p&gt;Tonight’s learning opportunity provided by the lovely Elise who brings
fun things to research (after some hair pulling and teeth gnashing).&lt;/p&gt;

&lt;p&gt;In WooCommerce, if you’re cart is empty, it displays a link “Return To
Shop” which if clicked takes you back to the Shop page.&lt;/p&gt;

&lt;p&gt;In this case, though, Elise wanted it to go to a different URL, and
didn’t want it to say “Return To Shop”.&lt;/p&gt;

&lt;p&gt;We looked high and low in the plugin, delving through the source and
the html output to try and figure out where this was getting called.&lt;/p&gt;

&lt;p&gt;Elise had to leave before we solved it, but later slacked me this
link:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://nicola.blog/2015/07/20/change-the-return-to-shop-button-url-in-the-cart-page/&quot;&gt;Change the Return to shop button URL in the cart page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Meanwhile, I’d grep’d the source tree of the WooCommerce plugin I’d
installed in my sandbaox, and found the following in
&lt;code class=&quot;highlighter-rouge&quot;&gt;wp-content/plugins/woocommerce/templates/cart/cart-empty.php&lt;/code&gt;, line
36:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;/**
 * Empty cart page
 *
 * This template can be overridden by copying it to yourtheme/woocommerce/cart/cart-empty.php.
 *
 * HOWEVER, on occasion WooCommerce will need to update template files and you
 * (the theme developer) will need to copy the new files to your theme to
 * maintain compatibility. We try to do this as little as possible, but it does
 * happen. When this occurs the version of the template file will be bumped and
 * the readme will list any important changes.
 *
 * @see 	    https://docs.woocommerce.com/document/template-structure/
 * @author  WooThemes
 * @package WooCommerce/Templates
 * @version 2.0.0
 */&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;defined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ABSPATH'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Exit if accessed directly
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;wc_print_notices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cart-empty&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Your cart is currently empty.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'woocommerce'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;do_action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'woocommerce_cart_is_empty'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wc_get_page_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'shop'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;return-to-shop&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;button wc-backward&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;esc_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;apply_filters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'woocommerce_return_to_shop_redirect'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wc_get_page_permalink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'shop'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Return To Shop'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'woocommerce'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This showed the link creating, the variable
&lt;code class=&quot;highlighter-rouge&quot;&gt;woocommerce_return_to_shop_redirect&lt;/code&gt; filter, and the text being
applied to the anchor tag.&lt;/p&gt;

&lt;p&gt;The comments in the file would have led us to copy the above template
and change the text, but that felt wrong, so I went looking for how to
change the localization text that matches ‘Return To Shop’ in the
woocommerce &lt;code class=&quot;highlighter-rouge&quot;&gt;.pot&lt;/code&gt; files.&lt;/p&gt;

&lt;p&gt;I was directed to the following page:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.woocommerce.com/document/woocommerce-localization/&quot;&gt;Translating WooCommerce (Localization)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;down to the last section on the page:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.woocommerce.com/document/woocommerce-localization/#section-6&quot;&gt;Translating Text without a localization file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;which in turn led me to the “Say What?” plugin at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://wordpress.org/plugins/say-what/&quot;&gt;Say what? WordPress Plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now with both of these solutions in hand, Elise is able to change both
the url and the label of the button in the cart.&lt;/p&gt;
</description>
        <pubDate>Tue, 20 Dec 2016 23:58:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/wordpress/2016/12/20/changing-the-return-to-shop-link-and-text-in-an-empty-woocommerce-cart/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/wordpress/2016/12/20/changing-the-return-to-shop-link-and-text-in-an-empty-woocommerce-cart/</guid>
        
        <category>wordpress</category>
        
        <category>woocommerce</category>
        
        <category>customization</category>
        
        <category>say-what</category>
        
        
        <category>wordpress</category>
        
      </item>
    
      <item>
        <title>flexbox website with fixed headers and footer</title>
        <description>&lt;p&gt;I was playing around with some React stuff and came upon a basic
layout issue. I wanted to have the standard header + footer + main +
sidebar sort of layout, but I wanted to do it flexbox. I also wanted
the header and footer to be fixed to the top and bottom, respectively,
and for the main content to be able to scroll inside it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UPDATE!!&lt;/strong&gt; Now with more responsive!&lt;/p&gt;

&lt;p&gt;The results can be seen at &lt;a href=&quot;https://github.com/tamouse/sample-flex-website-layout&quot;&gt;this repo&lt;/a&gt;, and a demo
	at &lt;a href=&quot;https://tamouse.github.io/sample-flex-website-layout/&quot;&gt;Flex Standard Layout (demo)&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;page-boundaries-header-and-footer&quot;&gt;Page Boundaries: Header and Footer&lt;/h2&gt;

&lt;p&gt;Making the header and footer fixed to top and bottom is fairly easy.
The following attributes generally work well:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.fixed-top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.fixed-bottom&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aboslute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.fixed-top&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.fixed-bottom&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;full-height-columns&quot;&gt;Full-height columns&lt;/h2&gt;

&lt;p&gt;Getting columns of equal height is a bit tricksier, and I resorted to
what seems like a hack.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.fixed-middle&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.fixed-middle&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.column&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;wheres-the-flex&quot;&gt;Where’s the flex?&lt;/h2&gt;

&lt;p&gt;This isn’t very flexy yet, so I added in some goodness for that:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.fixed-middle&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;dislplay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.fixed-middle&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.col&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Much better, but then the sidebars and central main content area are
all the same width. I want the content area to dominate.&lt;/p&gt;

&lt;p&gt;I arranged the main content part to come before the sidebars, like so:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fixed-middle&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;main-content&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;role=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- main content --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;aside&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;left-side&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- left side bar content --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/aside&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;aside&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;right-side&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- right sidebar content --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/aside&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After removing &lt;code class=&quot;highlighter-rouge&quot;&gt;.fixed-middle .col&lt;/code&gt; CSS definition, I put in:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.fixed-middle&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.main-content&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.fixed-middle&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.left-side&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.fixed-middle&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.right-side&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This tells flexbox to let the main content area grow to 5 times the
size of the sidebars, but make sure the left side bar’s content comes
first in the row.&lt;/p&gt;

&lt;h2 id=&quot;header-and-footer-redux&quot;&gt;Header and Footer Redux&lt;/h2&gt;

&lt;p&gt;I wanted to extend this even further, so the case where you may have
multiple “widgets” in the header or footer, and so redid the same idea
for the those, but keeping the flex to 1.&lt;/p&gt;

&lt;p&gt;If I ended up with a 2/3 widget and 1/3 widget, I could mark them with
appropriate classes and set the flex accordingly.&lt;/p&gt;

&lt;h2 id=&quot;sample-repo-and-demo&quot;&gt;Sample Repo and Demo&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tamouse/sample-flex-website-layout&quot;&gt;sample repo on Github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tamouse.github.io/sample-flex-website-layout/&quot;&gt;demonstration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;making-it-responsive&quot;&gt;Making it responsive&lt;/h2&gt;

&lt;p&gt;This turned out to be really easy, and all I needed to do is wrap the
flexbox and absolute positioning in a media query.&lt;/p&gt;

&lt;p&gt;I had put the page header after the main content, but that didn’t look
as good, so I moved that to the top.&lt;/p&gt;

&lt;p&gt;The image was misbehaving as well, so I introduced an
&lt;code class=&quot;highlighter-rouge&quot;&gt;.img-responsive&lt;/code&gt; class that limited the width to 100%.&lt;/p&gt;
</description>
        <pubDate>Sun, 04 Dec 2016 14:31:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/css/2016/12/04/flexbox-website-with-fixed-headers-and-footer/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/css/2016/12/04/flexbox-website-with-fixed-headers-and-footer/</guid>
        
        <category>css</category>
        
        <category>flexbox</category>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>Todo app using just React with POJS - no JSX or ES6</title>
        <description>&lt;p&gt;I just moderated the &lt;a href=&quot;https://frontendmasters.com&quot;&gt;Frontend Masters&lt;/a&gt;
class “Complete Introduction to React” taught
by &lt;a href=&quot;https://twitter.com/holtbt&quot;&gt;Brian Holt&lt;/a&gt; of Netflix and Reddit
fame.&lt;/p&gt;

&lt;p&gt;It was a great course, but as moderator I was doing a lot of things to
keep the chat room flowing and didn’t get to pay much attention to the
detail Brian was presenting, and definitely didn’t have time in class
to try out stuff.&lt;/p&gt;

&lt;p&gt;So I thought I’d just give the first bit of Brian’s presentation a go,
where we just worked with React as a plain JS library, nothing fancy,
no JSX transpiling, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tamouse/todo-react-nojsx&quot;&gt;This&lt;/a&gt; is the result, the canonical single page Todo
application.&lt;/p&gt;

&lt;p&gt;It was pretty easy, and pretty fun. I kept only to
the &lt;a href=&quot;https://facebook.github.io/react/docs/&quot;&gt;React docs&lt;/a&gt;, especially&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/docs/react-without-es6.html&quot;&gt;React Without ES6 - React&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/docs/react-without-jsx.html&quot;&gt;React Without JSX - React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m pleased with the experiement.&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Dec 2016 09:56:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/javascript/react/2016/12/03/todo-app-using-just-react-with-pojs-no-jsx-or-es6/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/javascript/react/2016/12/03/todo-app-using-just-react-with-pojs-no-jsx-or-es6/</guid>
        
        <category>javascript</category>
        
        <category>react</category>
        
        <category>learning</category>
        
        <category>todoapp</category>
        
        <category>frontend-masters</category>
        
        <category>brian-holt</category>
        
        
        <category>javascript</category>
        
        <category>react</category>
        
      </item>
    
      <item>
        <title>Ask Me Anything</title>
        <description>&lt;p&gt;I started a new thing: an “Ask Me Anything” github repo where you can
ask me any question as an issue, I’ll try to answer it.&lt;/p&gt;

&lt;p&gt;I got the idea from
reading &lt;a href=&quot;https://github.com/notwaldorf&quot;&gt;@notwaldorf&lt;/a&gt;’s site about the
&lt;a href=&quot;https://github.com/notwaldorf/font-style-matcher&quot;&gt;font-style-matcher&lt;/a&gt;
tool she wrote (which you should also check out).&lt;/p&gt;

&lt;p&gt;If you have questions, &lt;a href=&quot;https://github.com/tamouse/ama/issues/new&quot;&gt;ask me!&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Nov 2016 07:59:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/github/2016/11/30/ask-me-anything/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/github/2016/11/30/ask-me-anything/</guid>
        
        <category>ama</category>
        
        <category>ask-me-anything</category>
        
        <category>github</category>
        
        
        <category>github</category>
        
      </item>
    
  </channel>
</rss>
<!-- touch 1 -->
