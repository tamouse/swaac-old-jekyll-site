<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software as a Craft</title>
    <description>The development blog of tamouse</description>
    <link>http://swaac.tamouse.org/</link>
    <atom:link href="http://swaac.tamouse.org/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 06 Apr 2017 23:09:01 -0500</pubDate>
    <lastBuildDate>Thu, 06 Apr 2017 23:09:01 -0500</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>Link: Decorating ActiveRecord</title>
        <description>&lt;p&gt;This came across my path this
week: &lt;a href=&quot;https://robots.thoughtbot.com/authors/joel-quenneville&quot;&gt;Joël Quenneville&lt;/a&gt;’s
article,
&lt;a href=&quot;https://robots.thoughtbot.com/decorating-activerecord?utm_source=rubyweekly&amp;amp;utm_medium=email&quot;&gt;Decorating ActiveRecord&lt;/a&gt;,
which outlines some hazards when you go about decorating ActiveRecord
models.&lt;/p&gt;

&lt;p&gt;Do read the article, it’s good.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Here’s the tl;dr for my memory:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you’re decorating an ActiveRecord or ActiveModel object in Rails,
you probably want to define the following to ensure the decorator
works the way you expect instead of silently delegating to the
underlying object:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Profile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SimpleDelegator&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;extend&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Naming&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to_model&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


&lt;/blockquote&gt;
</description>
        <pubDate>Thu, 06 Apr 2017 23:01:00 -0500</pubDate>
        <link>http://swaac.tamouse.org/rails/2017/04/06/link-decorating-activerecord/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/rails/2017/04/06/link-decorating-activerecord/</guid>
        
        <category>rails</category>
        
        <category>activerecord</category>
        
        <category>decorators</category>
        
        <category>links</category>
        
        <category>tl-dr</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Baratunde Thurston Explains Web Encryption</title>
        <description>&lt;p&gt;The Electronic Freedom Foundation (&lt;a href=&quot;https://www.eff.org&quot; title=&quot;The Electronic Freedom Foundation&quot;&gt;EFF&lt;/a&gt;) is working
to &lt;a href=&quot;https://www.eff.org/encrypt-the-web&quot;&gt;encrypt the web&lt;/a&gt;, converting
all web sites from HTTP to
HTTPS. &lt;a href=&quot;http://baratunde.com/&quot;&gt;Baratunde Thurston&lt;/a&gt; narrates the video
explaining web encryption to the masses.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/PdnpNJZVUE0?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;You may notice my sites don’t use HTTPS. The only reason is I’ve not
gotten around to implementing it yet.&lt;/p&gt;

&lt;p&gt;I’ve used it on projects, and it’s pretty simple to set up. Look for a
future post, probably.&lt;/p&gt;
</description>
        <pubDate>Sun, 12 Feb 2017 08:06:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/security/2017/02/12/baratunde-thurston-explains-web-encryption/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/security/2017/02/12/baratunde-thurston-explains-web-encryption/</guid>
        
        <category>security</category>
        
        <category>eff</category>
        
        <category>encryption</category>
        
        <category>https</category>
        
        <category>baratunde-thurston</category>
        
        
        <category>security</category>
        
      </item>
    
      <item>
        <title>How I Set Up my Local WordPress Development Environment Using Vagrant and Ansible</title>
        <description>&lt;p&gt;As part of my volunteering with &lt;a href=&quot;https://gdiminneapolis.com&quot; title=&quot;Girl, Develop it! Minneapolis Chapter&quot;&gt;GDI Minneapolis&lt;/a&gt;, I’ve been
getting back into WordPress development (child themes, custom themes,
etc.), while TAing, teaching, and helping develop some classes. One of
the key things we want to show students is how to develop their sites
safely and learn the trade of software development in the WordPress
environment.&lt;/p&gt;

&lt;p&gt;There are several ways one can do this. There are some really
&lt;em&gt;excellent&lt;/em&gt; tools out there now that make this a snap for people not
versed in setting things up themselves.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://local.getflywheel.com&quot; title=&quot;Local by Flywheel: Local WordPress development made simple&quot;&gt;Local by Flywheel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://serverpress.com/get-desktopserver/&quot; title=&quot;Get DesktopServer and save time!&quot;&gt;DesktopServer from ServerPress&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are also traditional ways of installing &lt;a href=&quot;https://www.mamp.info/en/&quot; title=&quot;My Apache, MySQL, and PHP&quot;&gt;MAMP&lt;/a&gt; on MacOSx, or using
a &lt;a href=&quot;https://www.turnkeylinux.org/wordpress&quot; title=&quot;Turnkey Linux WordPress Appliance&quot;&gt;Turnkey Linux WordPress Appliance&lt;/a&gt;, and so many other ways.&lt;/p&gt;

&lt;p&gt;This is how I set up my local environment using two tools I use
heavily in other areas of web development:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.vagrantup.com/&quot; title=&quot;Development environments made easy&quot;&gt;Vagrant&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ansible.com/&quot; title=&quot;Automation for everyone&quot;&gt;Ansible&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;First off, this is going to be less of a tutorial and more a
description of what I’m doing. I’m definitely not holding this out as
a definitive way to set up your local WordPress development
environment, but &lt;em&gt;my&lt;/em&gt; way that works for me. If you’re brand new to
all this, and don’t want to learn all about systems and devops, then I
recommend using one of the first two options above. (I’ve played a bit
with &lt;a href=&quot;https://local.getflywheel.com&quot; title=&quot;Local by Flywheel: Local WordPress development made simple&quot;&gt;Local&lt;/a&gt;, and find it amazingly intuitive and
simple, so that’s my latest recommendation.)&lt;/p&gt;

&lt;p&gt;Secondly, the sandbox setup is available on GitHub
at
&lt;a href=&quot;https://github.com/tamouse/sandbox.wp.local&quot;&gt;github.com/tamouse/sandbox.wp.local&lt;/a&gt; so
feel free to fork it, and do what you want with it. I’ll happily take
PRs if you find bugs, too.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;starting-point&quot;&gt;Starting Point&lt;/h2&gt;

&lt;p&gt;My working system:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Macbook Pro 13”&lt;/li&gt;
  &lt;li&gt;8 GiB RAM&lt;/li&gt;
  &lt;li&gt;4 CPU Cores&lt;/li&gt;
  &lt;li&gt;about 50 GiB free disk space (I didn’t need anywhere near this, it’s
just what was there when I started.)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;h3 id=&quot;available-software&quot;&gt;Available Software&lt;/h3&gt;

&lt;p&gt;This is stuff I already had on my system because of other development
I do.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HomeBrew&lt;/li&gt;
  &lt;li&gt;VirtualBox&lt;/li&gt;
  &lt;li&gt;Vagrant&lt;/li&gt;
  &lt;li&gt;Ansible&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;steps-to-get-things-set-up&quot;&gt;Steps to Get Things Set Up&lt;/h2&gt;

&lt;h3 id=&quot;create-a-project-folder-and-initialize-it&quot;&gt;Create a project folder and initialize it&lt;/h3&gt;

&lt;p&gt;I always start my projects the same way:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir -p ~/Projects/wordpress-stuff/sandbox.wp.local
cd ~/Projects/wordpress-stuff/sandbox.wp.local
git init
echo 'Local WordPress Development Sandbox running in Vagrant with Ansible Provisioning' | tee README.md &amp;gt; .git/description
hub create -d &quot;$(cat .git/description)&quot;
git add -Av
git commit -m 'initial commit'
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;(Truth be told, this is one of my bash functions, so it really looked
like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;new_proj sandbox.wp.local 'Local WordPress Development Sandbox running in Vagrant with Ansible Provisioning' 'initial commit'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;)&lt;/p&gt;

&lt;h3 id=&quot;run-vagrant-init&quot;&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;vagrant init&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;I typically use one of the later Ubuntu server variants; mostly I’ve
been using ‘trusty’:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vagrant init &lt;span class=&quot;s1&quot;&gt;'ubuntu/trusty64'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This writes out a default &lt;code class=&quot;highlighter-rouge&quot;&gt;Vagrantfile&lt;/code&gt; (which is written in Ruby).&lt;/p&gt;

&lt;h3 id=&quot;modify-vagrantfile-for-my-needs&quot;&gt;Modify &lt;code class=&quot;highlighter-rouge&quot;&gt;Vagrantfile&lt;/code&gt; for my needs&lt;/h3&gt;

&lt;p&gt;I modify the file so it looks like so:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;BOX_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sandbox.wp.local&quot;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;DEFAULT_IP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;192.168.33.35&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;resolv&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;my_ip&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@my_ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Resolv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Hosts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getaddress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BOX_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DEFAULT_IP&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@my_ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DEFAULT_IP&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Vagrant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;forward_agent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:sandbox_wp&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;box&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ubuntu/trusty64&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;network&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;private_network&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;ip: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_ip&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;network&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;forwarded_port&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;guest: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;host: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8088&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hostname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BOX_NAME&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;virtualbox&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Display the VirtualBox GUI when booting the machine&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# vb.gui = true&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# Customize the amount of memory on the VM:&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;vb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;customize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;modifyvm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;--memory&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2048&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;vb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;customize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;modifyvm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;--vram&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;18&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;vb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;customize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;modifyvm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;--cpus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;vb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;customize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;modifyvm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;--natdnshostresolver1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;on&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;provision&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ansible&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;playbook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ansible/sandbox.yml'&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# a.verbose  = 'vvvv'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Some explanation about the various settings:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;BOX_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sandbox.wp.local&quot;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;DEFAULT_IP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;192.168.33.35&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;These define two constants that get used later in the &lt;code class=&quot;highlighter-rouge&quot;&gt;Vagrantfile&lt;/code&gt;. I
edited my machine’s &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; file, which maps IP addresses to
hostnames locally. The line I added to &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; looks like so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;192.168.33.35	sandbox.wp.local sandbox
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This lets me type ‘http://sandbox/’ or ‘http://sandbox.wp.local’ in
the browser address bar to access the web server that will be running
in the Vagrant Virtual Machine (aka “VM”).&lt;/p&gt;

&lt;p&gt;(Note: when I used &lt;a href=&quot;https://local.getflywheel.com&quot; title=&quot;Local by Flywheel: Local WordPress development made simple&quot;&gt;Local&lt;/a&gt;, it did something similar.)&lt;/p&gt;

&lt;p&gt;Then I’m bringing in ruby’s &lt;code class=&quot;highlighter-rouge&quot;&gt;resolv&lt;/code&gt; standard library, which gives the
ability to use that mapping given in the &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; file; the
&lt;code class=&quot;highlighter-rouge&quot;&gt;DEFAULT_IP&lt;/code&gt; constant provides a fallback in case it can’t find
&lt;code class=&quot;highlighter-rouge&quot;&gt;BOX_NAME&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;my_ip&lt;/code&gt; method defined sets and returns the IP address to be used
for my WordPress sandbox.&lt;/p&gt;

&lt;p&gt;With all that handled, vagrant can begin it’s configuration. Most
everything from here out can be found in vagrant’s documentation, if
you want.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;forward_agent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I set this to true so when I’m logged into the vagrant box, it will
use my ssh keys from my development machine; this is especially
helpful when using git commands that talk to GitHub, etc.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;network&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;private_network&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;ip: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_ip&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here is where that calculation for figuring out what IP address to use
that matches the name ‘sandbox.wp.local’ I set up is made.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hostname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BOX_NAME&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This sets the VM host name, so it will match ‘sandbox.wp.local’ when
I’m logged in.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      &lt;span class=&quot;n&quot;&gt;vb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;customize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;modifyvm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;--memory&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2048&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This reserves 2GiB of RAM for the VM.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      &lt;span class=&quot;n&quot;&gt;vb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;customize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;modifyvm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;--vram&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;18&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This reserves 18MB of RAM for the video buffer.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      &lt;span class=&quot;n&quot;&gt;vb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;customize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;modifyvm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;--cpus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This allows up to 2 CPU Cores to be used by the VM.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      &lt;span class=&quot;n&quot;&gt;vb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;customize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;modifyvm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;--natdnshostresolver1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;on&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This does some magic to use the host machine’s DNS resolver to find
IP address, which pulls in the magic of mapping ‘sandbox.wp.local’.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;provision&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ansible&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Tells vagrant I’m using Ansible provisioning.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;playbook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ansible/sandbox.yml'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Specifies the Ansible ‘playbook’&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;c1&quot;&gt;# a.verbose  = 'vvvv'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Leaving this commented out, but usually it’s uncommented for me to be
able to debug things during provisioning.&lt;/p&gt;

&lt;h3 id=&quot;make-a-git-savepoint&quot;&gt;Make a git savepoint&lt;/h3&gt;

&lt;p&gt;Committing the current changes at this point to create a “save point”
to get back to if I end up mucking things up.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add -Av &amp;amp;&amp;amp; git commit -m 'Vagrantfile updated' &amp;amp;&amp;amp; git push
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;(And this is also a bash function:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gacp &lt;span class=&quot;s1&quot;&gt;'Vagrantfile updated'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;)&lt;/p&gt;

&lt;p&gt;At this point, I decided I would make a branch to work on Ansible
stuff, too:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout -b ansible-playbook
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;create-the-anisble-playbook&quot;&gt;Create the Anisble Playbook&lt;/h3&gt;

&lt;p&gt;Ansible playbooks are build as YAML files, which is just a way of
specifying structured data. It’s akin to JSON and XML.&lt;/p&gt;

&lt;p&gt;I made the ansible playbook in the &lt;code class=&quot;highlighter-rouge&quot;&gt;ansible&lt;/code&gt; subdirectory, the
structure is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ansible/
  group_vars/
    all.yml
  roles/
    external/
	  .keep
	internal/
	  cleanup/
	    tasks/
		  main.yml
	  common/
	    tasks/
		  install.yml
		  main.yml
	requirements.yml
  sandbox.yml
  sudo_roles.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;top-level-playbook&quot;&gt;Top level playbook&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tamouse/sandbox.wp.local/blob/master/ansible/sandbox.yml&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sandbox.yml&lt;/code&gt;&lt;/a&gt; is
the top-level playbook that sets the whole provisioning activity
off. It is simple and just contains:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sudo_roles.yml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;sudo-roles-playbook&quot;&gt;Sudo Roles Playbook&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tamouse/sandbox.wp.local/blob/master/ansible/sudo_roles.yml&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo_roles.yml&lt;/code&gt;&lt;/a&gt; is
the playbook that runs all the roles that need to be performs as the
superuser. In this project, that’s all of them. My playbook goes in
the following order:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;internal/common&lt;/li&gt;
  &lt;li&gt;external/calebwoods.brightbox_ruby&lt;/li&gt;
  &lt;li&gt;external/geerlingguy.nodejs&lt;/li&gt;
  &lt;li&gt;external/geerlingguy.apache&lt;/li&gt;
  &lt;li&gt;external/geerlingguy.mysql&lt;/li&gt;
  &lt;li&gt;external/geerlingguy.php&lt;/li&gt;
  &lt;li&gt;external/darthwade.wordpress&lt;/li&gt;
  &lt;li&gt;external/darthwade.wordpress-apache&lt;/li&gt;
  &lt;li&gt;internal/cleanup&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;defining-external-requirements&quot;&gt;Defining External Requirements&lt;/h3&gt;

&lt;p&gt;In building this up, my starting point was to figure out what
pre-built roles I could use to install the software and
configurations I would need. These filled out
&lt;a href=&quot;https://github.com/tamouse/sandbox.wp.local/blob/master/ansible/roles/requirements.yml&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;roles/requirements.yml&lt;/code&gt;&lt;/a&gt;. I’m using these roles:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://galaxy.ansible.com/geerlingguy/nodejs/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;geerlingguy.nodejs&lt;/code&gt;&lt;/a&gt; - installs the latest stable version of Node.js&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://galaxy.ansible.com/geerlingguy/apache/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;geerlingguy.apache&lt;/code&gt;&lt;/a&gt; - the Apache 2.x web server&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://galaxy.ansible.com/geerlingguy/mysql/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;geerlingguy.mysql&lt;/code&gt;&lt;/a&gt; - MySQL database management system, 5.x&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://galaxy.ansible.com/geerlingguy/php/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;geerlingguy.php&lt;/code&gt;&lt;/a&gt; - PHP language, 5.x&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://galaxy.ansible.com/darthwade/wordpress/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;darthwade.wordpress&lt;/code&gt;&lt;/a&gt; - WordPress installation&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://galaxy.ansible.com/darthwade/wordpress-apache/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;darthwade.wordpress-apache&lt;/code&gt;&lt;/a&gt; - Apache requirements for WordPress&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://galaxy.ansible.com/calebwoods/brightbox_ruby/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;calebwoods.brightbox_ruby&lt;/code&gt;&lt;/a&gt; - Ruby 2.x because I like working in
Ruby, too&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of these requires some configuration. The configuration settings
are defined
in
&lt;a href=&quot;https://github.com/tamouse/sandbox.wp.local/blob/master/ansible/group_vars/all.yml&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;group_vars/all.yml&lt;/code&gt;&lt;/a&gt;. I
set things up as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;enable apache &lt;code class=&quot;highlighter-rouge&quot;&gt;rewrite_mod&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;MySQL root password&lt;/li&gt;
  &lt;li&gt;MySQL WordPress database and user &lt;code class=&quot;highlighter-rouge&quot;&gt;vagrant&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Ruby version 2.2 and 2.3&lt;/li&gt;
  &lt;li&gt;Node.js version 6, npm user &lt;code class=&quot;highlighter-rouge&quot;&gt;vagrant&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Various PHP options and modules:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;php5&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;php5-cli&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;php5-common&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;php5-curl&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;php5-dev&lt;/code&gt;,
&lt;code class=&quot;highlighter-rouge&quot;&gt;php5-gd&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;php5-mysql&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;memory limit: 128MiB&lt;/li&gt;
      &lt;li&gt;execution time: 90s&lt;/li&gt;
      &lt;li&gt;max file upload size: 256MiB&lt;/li&gt;
      &lt;li&gt;disable apcu&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;WordPress Configurations&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;version 4.0&lt;/li&gt;
      &lt;li&gt;install directory &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/www/sandbox_wp&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;db user: &lt;code class=&quot;highlighter-rouge&quot;&gt;vagrant&lt;/code&gt; (match above)&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;db host: &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;hostname: &lt;code class=&quot;highlighter-rouge&quot;&gt;sandbox.wp.local&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;alias: ‘sandbox’&lt;/li&gt;
      &lt;li&gt;admin email: “admin@example.com” (because I’m not sending any
emails)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;internal-requirements&quot;&gt;Internal Requirements&lt;/h3&gt;

&lt;p&gt;These are things I installed and configured myself without relying on
pre-defined roles.&lt;/p&gt;

&lt;p&gt;Because the &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo_roles.yml&lt;/code&gt; file calls &lt;code class=&quot;highlighter-rouge&quot;&gt;internal/common&lt;/code&gt;,
&lt;code class=&quot;highlighter-rouge&quot;&gt;roles/internal/common/tasks/main.yml&lt;/code&gt; gets run automatically during
provisioning. It calls
in
&lt;a href=&quot;https://github.com/tamouse/sandbox.wp.local/blob/master/ansible/roles/internal/common/tasks/install.yml&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;roles/internal/common/tasks/install.yml&lt;/code&gt;&lt;/a&gt; which
I’m using to install necessary software packages.&lt;/p&gt;

&lt;p&gt;After updating the APT caches, I installed:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;build-essential&lt;/li&gt;
  &lt;li&gt;ntp&lt;/li&gt;
  &lt;li&gt;git&lt;/li&gt;
  &lt;li&gt;vim&lt;/li&gt;
  &lt;li&gt;emacs24&lt;/li&gt;
  &lt;li&gt;unzip&lt;/li&gt;
  &lt;li&gt;imagemagick&lt;/li&gt;
  &lt;li&gt;libmagick-dev&lt;/li&gt;
  &lt;li&gt;libxml2&lt;/li&gt;
  &lt;li&gt;libxml2-dev&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;WordPress definitely doesn’t need all of these, but my development
tools and workflow generally do, and that’s what this is all about.&lt;/p&gt;

&lt;h3 id=&quot;final-configuration-and-cleanup&quot;&gt;Final configuration and cleanup&lt;/h3&gt;

&lt;p&gt;After installing all the internal and external roles, I still had some
things I wanted to configure and clean up. These went
into
&lt;a href=&quot;https://github.com/tamouse/sandbox.wp.local/blob/master/ansible/roles/internal/cleanup/tasks/main.yml&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;roles/internal/cleanup/tasks/main.yml&lt;/code&gt;&lt;/a&gt; and
included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;enabling the VHosts module for Apache2&lt;/li&gt;
  &lt;li&gt;disable the default and vhosts sites&lt;/li&gt;
  &lt;li&gt;reset user and group ownership of the WordPress site to &lt;code class=&quot;highlighter-rouge&quot;&gt;www-data&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;use the &lt;code class=&quot;highlighter-rouge&quot;&gt;direct&lt;/code&gt; method for &lt;code class=&quot;highlighter-rouge&quot;&gt;FS_METHOD&lt;/code&gt; which lets the WordPress
installation directly update from the codex without using FTP.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;another-git-save-point&quot;&gt;Another Git Save Point&lt;/h3&gt;

&lt;p&gt;Yep. This is how I roll.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gacp &lt;span class=&quot;s1&quot;&gt;'Ansible Playbook Created'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;gathering-the-external-requirements&quot;&gt;Gathering the External Requirements&lt;/h3&gt;

&lt;p&gt;Specifying the external requirements is not enough, I needed to tell
ansible to fetch them.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ansible-galaxy install -r ansible/roles/requirements.yml --force --ignore-errors
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;bringing-up-the-vm-and-first-provisioning&quot;&gt;Bringing up the VM and first provisioning&lt;/h3&gt;

&lt;p&gt;Now I was ready to pull together all the prior stuff and build the
box.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vagrant up
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The first time you run &lt;code class=&quot;highlighter-rouge&quot;&gt;up&lt;/code&gt; vagrant will start running the
provisioning after the box comes up. After this first time, however,
when you run the &lt;code class=&quot;highlighter-rouge&quot;&gt;up&lt;/code&gt; command, vagrant doesn’t try to
reprovision.&lt;/p&gt;

&lt;p&gt;So, you know, the first time you try something, you mistype something,
or you forget a configuration value, and so on. I know I did. I don’t
recall the specifics, but it doesn’t really matter, trial and error,
get things working, figure stuff out, and eventually I ended up with a
clean provisioning.&lt;/p&gt;

&lt;p&gt;You don’t need to keep running the &lt;code class=&quot;highlighter-rouge&quot;&gt;up&lt;/code&gt; command, you run the
&lt;code class=&quot;highlighter-rouge&quot;&gt;provision&lt;/code&gt; command instead while the box stays up. Since the point of
ansible is to provide an “idempotent” (i.e. same result each time
it’s run) solution, it will check if it’s successfully run a step and
skip over it. So my provisioning actually looked something like:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vagrant up
&lt;span class=&quot;c&quot;&gt;# something broke, fix it&lt;/span&gt;
vagrant provision
&lt;span class=&quot;c&quot;&gt;# something broke, fix it&lt;/span&gt;
vagrant provision
&lt;span class=&quot;c&quot;&gt;# something broke, fix it&lt;/span&gt;
vagrant provision
&lt;span class=&quot;c&quot;&gt;# something broke, fix it&lt;/span&gt;
vagrant provision
&lt;span class=&quot;c&quot;&gt;# and so on&lt;/span&gt;
vagrant provision
&lt;span class=&quot;c&quot;&gt;# yay it finally worked!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;and-another-save-point-and-merge-back-to-master&quot;&gt;And another save point, and merge back to master&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gacp 'Anisble provisioning works! Yay!`
git checkout master # aliased to: gco master
git merge ansible-playbook
gacp 'Merging ansible-playbook to master'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Whew!&lt;/p&gt;

&lt;h3 id=&quot;set-up-wordpress-installation&quot;&gt;Set up WordPress Installation&lt;/h3&gt;

&lt;p&gt;I was now ready to give the WordPress five-minute installation a go. I
fired up my browser at &lt;code class=&quot;highlighter-rouge&quot;&gt;http://sandbox.wp.local&lt;/code&gt; and there was the
installation page, just as I’d hoped.&lt;/p&gt;

&lt;p&gt;After running through that, playing with appearance, plugins, making a
couple posts and pages, I was feeling good.&lt;/p&gt;

&lt;p&gt;I tried installing some themes and plugins from the WordPress codex,
and they installed nicely. Updated the WordPress installation itself,
and everything was great.&lt;/p&gt;

&lt;h2 id=&quot;creating-a-development-environment&quot;&gt;Creating a development environment&lt;/h2&gt;

&lt;p&gt;This is really the whole point of this exercise: I wanted a sandbox
that would let me develop child and custom themes, plugins, other
custom things as I wanted, using my local machine to edit things, and
apply my favourite tools including Sass, gulp, ruby, and so on.&lt;/p&gt;

&lt;p&gt;With the WordPress install running in &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/www/sandbox_wp&lt;/code&gt; under
&lt;code class=&quot;highlighter-rouge&quot;&gt;www-data&lt;/code&gt;, I still needed a way to be able to edit files locally and
have them show up under the WordPress site.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;wp-content&lt;/code&gt; folder is used for a few things, but most important
to this task, I wanted to be able to have themes and plugins available
for local editing.&lt;/p&gt;

&lt;p&gt;Logging into the VM, I created a folder &lt;code class=&quot;highlighter-rouge&quot;&gt;/vagrant/dev&lt;/code&gt;, which would
show up on the local machine in the project root as just &lt;code class=&quot;highlighter-rouge&quot;&gt;dev/&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir /vagrant/dev
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then I recursively copied the contents of
&lt;code class=&quot;highlighter-rouge&quot;&gt;/var/www/sandbox_wp/wp-content/themes&lt;/code&gt; and
&lt;code class=&quot;highlighter-rouge&quot;&gt;/var/www/sandbox_wp/wp-content/plugins&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;/vagrant/dev/&lt;/code&gt;, which
created two folders &lt;code class=&quot;highlighter-rouge&quot;&gt;/vagrant/dev/themes&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;/vagrant/dev/plugins&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp -r /var/www/sandbox_wp/wp-content/themes /vagrant/dev
cp -r /var/www/sandbox_wp/wp-content/plugins /vagrant/dev
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;creating-a-little-demo-custom-theme&quot;&gt;Creating a little demo custom theme&lt;/h3&gt;

&lt;p&gt;To test things out, I created a custom theme under &lt;code class=&quot;highlighter-rouge&quot;&gt;dev/&lt;/code&gt; on the local
machine, and filled with some bare-bones content:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir -p dev/themes/demo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The
&lt;a href=&quot;https://github.com/tamouse/sandbox.wp.local/tree/master/dev/themes/demo&quot;&gt;demo content&lt;/a&gt; was
pretty complicated to set up, and I’m not going into it here. Easier
would have been just making a child theme to try stuff out.&lt;/p&gt;

&lt;h3 id=&quot;telling-wordpress-about-the-custom-theme&quot;&gt;Telling WordPress about the Custom Theme&lt;/h3&gt;

&lt;p&gt;Back over on the VM, I needed to tell the WordPress installation about
this new custom theme:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /var/www/sandbox_wp/wp-content/themes
sudo ln -s /vagrant/dev/themes/demo .
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Popping back over to the browser, and pulling up the Appearances -&amp;gt;
Themes menu, lo and behold, the custom theme now showed up.&lt;/p&gt;

&lt;h2 id=&quot;the-development-workflow&quot;&gt;The development workflow&lt;/h2&gt;

&lt;p&gt;I now could edit files comfortably in my local editor of choice,
saving files, and view the results by refreshing the browser pointing
at the WordPress site running in the VM.&lt;/p&gt;

&lt;h2 id=&quot;final-thoughts&quot;&gt;Final Thoughts&lt;/h2&gt;

&lt;p&gt;I created this set up initially during &lt;a href=&quot;https://2016.minneapolis.wordcamp.org/&quot; title=&quot;WordCamp MSP 2016&quot;&gt;WordCamp MSP 2016&lt;/a&gt;
for the fundamentals day so I could have a local hacking spot without
trying to roll up a remote server or build up a local server that I
may not want to keep around.&lt;/p&gt;

&lt;p&gt;(This is why the demo custom theme is as complex as it is.)&lt;/p&gt;

&lt;p&gt;One of the excellent things about using Vagrant and Ansible is the
ease of which you can spin something up again if you want to. However,
for future WordPress development work, I will probably be going
with &lt;a href=&quot;https://local.getflywheel.com&quot; title=&quot;Local by Flywheel: Local WordPress development made simple&quot;&gt;Local&lt;/a&gt; because it is &lt;em&gt;such&lt;/em&gt; a slick product, and
that’s what I’m recommending to my WordPress students.&lt;/p&gt;

</description>
        <pubDate>Sat, 11 Feb 2017 22:17:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/wordpress/2017/02/11/how-i-set-up-my-local-wordpress-development-environment-using-vagrant-and-ansible/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/wordpress/2017/02/11/how-i-set-up-my-local-wordpress-development-environment-using-vagrant-and-ansible/</guid>
        
        <category>wordpress</category>
        
        <category>vagrant</category>
        
        <category>ansible</category>
        
        <category>local</category>
        
        <category>sandbox</category>
        
        
        <category>wordpress</category>
        
      </item>
    
      <item>
        <title>Gitlab Database Outage Post-Mortem</title>
        <description>&lt;p&gt;Back at the end of January 2017, git SaaS
provider &lt;a href=&quot;https://gitlab.com&quot;&gt;Gitlab&lt;/a&gt; reported a disaster of epic
proportions:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;On January 31st 2017, we experienced a major service outage for one of our products, the online service GitLab.com. The outage was caused by an accidental removal of data from our primary database server.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;This incident caused the GitLab.com service to be unavailable for many hours. We also lost some production data that we were eventually unable to recover. Specifically, we lost modifications to database data such as projects, comments, user accounts, issues and snippets, that took place between 17:20 and 00:00 UTC on January 31. Our best estimate is that it affected roughly 5,000 projects, 5,000 comments and 700 new user accounts. Code repositories or wikis hosted on GitLab.com were unavailable during the outage, but were not affected by the data loss. GitLab Enterprise customers, GitHost customers, and self-hosted GitLab CE users were not affected by the outage, or the data loss.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;They had destroyed the database holding all their repository
information, and then could not find any viable backups.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Today, 11 February 2017,&lt;/strong&gt; they released
a &lt;a href=&quot;https://about.gitlab.com/2017/02/10/postmortem-of-database-outage-of-january-31/&quot;&gt;post-mortem&lt;/a&gt; of the situation,
providing something few companies have &lt;em&gt;ever&lt;/em&gt; done: transparency and
openness into a major devops disaster so that &lt;em&gt;everyone&lt;/em&gt; can learn.&lt;/p&gt;

&lt;p&gt;They list several items in the Root Cause Analysis section, and
provide a list of mitigation and recovery improvements now underway.&lt;/p&gt;

&lt;h2 id=&quot;major-kudos-to-gitlab&quot;&gt;Major kudos to Gitlab!&lt;/h2&gt;
</description>
        <pubDate>Sat, 11 Feb 2017 01:54:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/devops/2017/02/11/gitlab-database-outage-post-mortem/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/devops/2017/02/11/gitlab-database-outage-post-mortem/</guid>
        
        <category>devops</category>
        
        <category>gitlab</category>
        
        <category>database-outage</category>
        
        <category>post-mortem</category>
        
        
        <category>devops</category>
        
      </item>
    
      <item>
        <title>Links: Flexbox tutorials and posts</title>
        <description>&lt;p&gt;Collecting several links on learning Flexbox:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://css-tricks.com/snippets/css/a-guide-to-flexbox/&quot;&gt;A Complete Guide to Flexbox  CSS-Tricks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://css-tricks.com/designing-a-product-page-layout-with-flexbox/&quot;&gt;Designing A Product Page Layout with Flexbox  CSS-Tricks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.freecodecamp.com/understanding-flexbox-everything-you-need-to-know-b4013d4dc9af#.dqbu8so8a&quot;&gt;Understanding Flexbox Everything you need to know&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://flexboxfroggy.com/&quot;&gt;Flexbox Froggy - A game for learning CSS flexbox&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://swaac.tamouse.org/css/2016/12/04/flexbox-website-with-fixed-headers-and-footer/&quot;&gt;flexbox website with fixed headers and footer&lt;/a&gt; (personal
project)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 07 Feb 2017 20:02:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/css/2017/02/07/links-flexbox-tutorials-and-posts/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/css/2017/02/07/links-flexbox-tutorials-and-posts/</guid>
        
        <category>css</category>
        
        <category>flexbox</category>
        
        <category>links</category>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>TIL: Providing Defaults For EnvVars</title>
        <description>&lt;p&gt;&lt;strong&gt;Today I Learned:&lt;/strong&gt; that you can set a default for a missing
Environment Variable &lt;strong&gt;and&lt;/strong&gt; that an empty string is not the best
default.&lt;/p&gt;

&lt;p&gt;I’d been blissfully performing the following sort of passage when
dealing with envvars:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'FOO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;foo_setting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;envrion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'FOO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;foo_setting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is pretty wrong-headed in a few ways, including the fact that
some things expect a setting to be &lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt; instead to ensure they work
correctly. In particular, we were using this sort of thing to set the
profile name for &lt;code class=&quot;highlighter-rouge&quot;&gt;boto3&lt;/code&gt;. If the profile name is &lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt;, it doesn’t
try to connect, but if it’s the empty string &lt;code class=&quot;highlighter-rouge&quot;&gt;''&lt;/code&gt; it uses that for the
profile name, which of course will never work.&lt;/p&gt;

&lt;p&gt;So the proper construction is:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;foo_setting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'FOO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;saving us from an extraneous retrieval and test for a value.&lt;/p&gt;

&lt;p&gt;See more information
here:
&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.get&quot;&gt;dict.get()&lt;/a&gt;
in the Standard Type documentation.&lt;/p&gt;

&lt;p&gt;I should note that I only got there from finding
this:
&lt;a href=&quot;https://bugs.python.org/issue28242&quot;&gt;Issue 28242 os.environ.get documentation missing - Python tracker&lt;/a&gt;
via googling for “python3 os.environ get”, so it’s not exactly obvious
to the newcomer, like me. And this &lt;em&gt;after&lt;/em&gt; the lead on the team fixed
my oh so broken code. Yay for code reviews!&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Jan 2017 16:14:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/python/2017/01/24/til-providing-defaults-for-envvars/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/python/2017/01/24/til-providing-defaults-for-envvars/</guid>
        
        <category>envvars</category>
        
        <category>defaults</category>
        
        <category>TIL</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>TIL: Call done() to fire async mocha tests</title>
        <description>&lt;p&gt;Working on &lt;a href=&quot;/node.js/2017/01/16/my-first-proxy-slash-adapter-for-an-express-dot-js-app/&quot;&gt;my first express API call&lt;/a&gt;
this weekend, I learned something important for testing.&lt;/p&gt;

&lt;p&gt;I was running the test over and over and could not figure out why it
was just running to completion instead of performing the call.&lt;/p&gt;

&lt;p&gt;This was driving me nuts.&lt;/p&gt;

&lt;p&gt;Mocha has an added bit where it passes in a callback to tell it when
the asynchronous tests finish. This had completely eluded me, but one
of the HackTheGap mentors told me about it, and everything started to
work.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tests'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'does an async thing'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;do_an_async_thing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;be&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Passing &lt;code class=&quot;highlighter-rouge&quot;&gt;done&lt;/code&gt; to the &lt;code class=&quot;highlighter-rouge&quot;&gt;it&lt;/code&gt; function callback is what sets things in
motion. Mocha then knows there is some async piece to happen, and
calling &lt;code class=&quot;highlighter-rouge&quot;&gt;done()&lt;/code&gt; at the end of the test case signals back to mocha
that an async test has finished.&lt;/p&gt;

&lt;p&gt;Very important!&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Jan 2017 02:03:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/javascript/2017/01/16/til-call-done-to-fire-async-mocha-tests/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/javascript/2017/01/16/til-call-done-to-fire-async-mocha-tests/</guid>
        
        <category>mocha</category>
        
        <category>async</category>
        
        <category>testing</category>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>My First Proxy/Adapter for an Express.js app</title>
        <description>&lt;p&gt;Recently, I attended &lt;a href=&quot;https://hackthegap.com&quot;&gt;HackTheGap 2017&lt;/a&gt;, which
is an all-women hack-a-thon in the Twin Cities. (Huge fun!) Our team
built a web app using Node.js, Express.js, and MongoDB, mixing in a
little Python nltk for good
measure:
&lt;a href=&quot;https://github.com/BrainDumpShrinkBot/brain_dump_shrink_bot&quot;&gt;BrainDump/ShrinkBot&lt;/a&gt;.
This is the first serious Express app I’ve done from scratch, although
not too strenuous.&lt;/p&gt;

&lt;p&gt;One of the things we wanted was to be able to pull
some content from other sites based on some keywords (“tags”) that
were extracted from a diary / journal entry using nltk.&lt;/p&gt;

&lt;p&gt;One of those sources is &lt;a href=&quot;https://giphy.com&quot;&gt;Giphy&lt;/a&gt; with has an API in
Beta. The &lt;a href=&quot;https://github.com/Giphy/GiphyAPI&quot;&gt;Giphy API&lt;/a&gt; (github) is a
free for all way of accessing the fun animated GIFs stored on that
site.&lt;/p&gt;

&lt;h2 id=&quot;which-http-package&quot;&gt;Which HTTP package?&lt;/h2&gt;

&lt;p&gt;I tried a few different HTTP packages,
including &lt;a href=&quot;https://www.npmjs.com/package/superagent&quot;&gt;superagent&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/request&quot;&gt;request&lt;/a&gt;, and finally settling on
&lt;a href=&quot;https://www.npmjs.com/package/node-fetch&quot;&gt;node-fetch&lt;/a&gt;. I went with this latter because it is most familiar to
me from working in client-side JavaScript.&lt;/p&gt;

&lt;h2 id=&quot;the-giphy-api&quot;&gt;The Giphy API&lt;/h2&gt;

&lt;p&gt;The api is really very simple:&lt;/p&gt;

&lt;p&gt;The search URL is &lt;code class=&quot;highlighter-rouge&quot;&gt;http://api.giphy.com/v1/gifs/search&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Parameters are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;api_key&lt;/code&gt; - public beta api_key is ‘dc6zaTOxFJmzC’ (everyone gets
the same one)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;q&lt;/code&gt; - search terms or phrase&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;limit&lt;/code&gt; - number of hits to return&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;offset&lt;/code&gt; - skip this many hits before returning &lt;code class=&quot;highlighter-rouge&quot;&gt;limit&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rating&lt;/code&gt; - “y”, “g”, “pg”, “pg-13”, “r”&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lang&lt;/code&gt; - 2-letter language code, e.g. ‘en’&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fmt&lt;/code&gt; - ‘json’ or ‘html’&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Only &lt;code class=&quot;highlighter-rouge&quot;&gt;api_key&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;q&lt;/code&gt; are required.&lt;/p&gt;

&lt;p&gt;It returns by default a JSON structure with a whole pile of info. See
the repo’s README for actual information.&lt;/p&gt;

&lt;p&gt;The proxy/adapter I wrote was really quite simple. I created a module
with an IIFE that configured adapter and returned a method to call the
API.&lt;/p&gt;

&lt;p&gt;I wanted to be able to pass in configuration values for the various
pieces of the API. For this first pass, I kept things a bit locked
down.&lt;/p&gt;

&lt;p&gt;The consumer provides an array of tag strings to search for, and a
callback to process the return from the API.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cm&quot;&gt;/**
 * Getting a gif from Giphy: https://github.com/giphy/Giphyapi#search-endpoint
 */&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./../config'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'node-fetch'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch_giphy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;giphy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'?api_key='&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;giphy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;api_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;amp;q='&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;encodeURI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;amp;limit=1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;amp;rating=g'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ERROR!!!&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;fetch_giphy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch_giphy&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I wrote a mocha test for this as well, although I could probably do a
lot more in terms of verification:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'expect.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./../../config'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get_giphy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./../../services/get_giphy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'get_giphy tests'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'returns a json data block'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;get_giphy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetch_giphy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'funny'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;data: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;be&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;til-calling-done-to-fire-async-mocha-tests&quot;&gt;TIL: calling &lt;code class=&quot;highlighter-rouge&quot;&gt;done&lt;/code&gt; to fire async mocha tests&lt;/h2&gt;

&lt;p&gt;This particular thing was driving me nuts: I was running the test over
and over and could not figure out why it was just running to
completion instead of performing the call.&lt;/p&gt;

&lt;p&gt;Mocha has an added bit where it passes in a callback to tell it when
the asynchronous tests finish. This had completely eluded me, but one
of the HackTheGap mentors told me about it, and everything started to
work.&lt;/p&gt;

&lt;h2 id=&quot;follow-on-thoughts&quot;&gt;Follow-on thoughts&lt;/h2&gt;

&lt;p&gt;Although I’m specifying the API settings in a configuration object
that gets passed in, I’m not really allowing that to be injected. It
would be more helpful, maybe to export just the outer function itself,
and let the consumer pass in the configuration, thus allowing
injection per environment / use.&lt;/p&gt;

&lt;p&gt;I might also roll back to using &lt;code class=&quot;highlighter-rouge&quot;&gt;superagent&lt;/code&gt; as I like it’s way of
dealing with building query strings rather nice (just passing in an
Object) vs. presently with &lt;code class=&quot;highlighter-rouge&quot;&gt;fetch&lt;/code&gt; where I’m basically hard-coding
strings.&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Jan 2017 01:32:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/node.js/2017/01/16/my-first-proxy-slash-adapter-for-an-express-dot-js-app/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/node.js/2017/01/16/my-first-proxy-slash-adapter-for-an-express-dot-js-app/</guid>
        
        <category>node.js</category>
        
        <category>express.js</category>
        
        <category>javascript</category>
        
        <category>using-apis-from-javascript</category>
        
        
        <category>node.js</category>
        
      </item>
    
      <item>
        <title>JS App Config Pattern</title>
        <description>&lt;p&gt;Nothing really new here, just writing down this pattern I’ve noticed
in various JavaScript apps (notably &lt;a href=&quot;http://expressjs.com/&quot; title=&quot;Fast, unopinionated, minimalist web framework for Node.js&quot;&gt;Express&lt;/a&gt; apps). First seen in &lt;a href=&quot;https://twitter.com/scotups&quot; title=&quot;Scott Moss on Twitter&quot;&gt;Scott
Moss’s&lt;/a&gt; &lt;a href=&quot;https://frontendmasters.com/courses/api-design-nodejs/&quot; title=&quot;Learn API design in Node.js using Express class&quot;&gt;‘API Design’ course&lt;/a&gt; at
&lt;a href=&quot;https://frontendmasters.com&quot; title=&quot;Frontend Masters: Learn JavaScript, React, Angular and more,..deeply&quot;&gt;FrontendMasters&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;concept&quot;&gt;Concept&lt;/h2&gt;

&lt;p&gt;The basic concept is to collect all application configuration in one
place so you don’t have to litter it all over the application. Use a
“standard” JS component idea, as one does with Angular and React to put
it all into a single location.&lt;/p&gt;

&lt;h2 id=&quot;use-case&quot;&gt;Use Case&lt;/h2&gt;

&lt;p&gt;My use case will be a rather generic Express API application. Using a
service- or resource-oriented structure, I have an folder structures
like so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  app/
    posts/
      index.js
      postModel.js
      postsController.js
      postsRoutes.js
    users/
      index.js
      userModel.js
      usersContoller.js
      usersRoutes.js
    index.js
  config/
    development.js
    index.js
    production.js
    test.js
  public/
    images/
    javascripts/
    stylesheets/
    index.html
  index.js
  package.json
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I’m taking advantage of the convention of using an &lt;code class=&quot;highlighter-rouge&quot;&gt;index.js&lt;/code&gt; at the root
of the components (and app) to make requiring the module as simple as
providing the directory name.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-configuration-module&quot;&gt;Creating the configuration module&lt;/h2&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;./config/index.js&lt;/code&gt;, I have the following:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;baseConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'development'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;jwtSecret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JWT_SECRET&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;envConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;baseConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;baseConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;envConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A &lt;strong&gt;HUGE&lt;/strong&gt; caveat, of course, is to &lt;strong&gt;NEVER&lt;/strong&gt; save secrets and
credentials in git (or Github, Gitlab, BitBucket, etc.) since they
will be there forever, even if you later remove them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Always use environment variables to configure secret values.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;creating-the-environment-configurations&quot;&gt;Creating the environment configurations&lt;/h2&gt;

&lt;p&gt;The environment configurations would be the same as the environment
names with ‘.js’ added, so:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;development.js&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;testing.js&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;production.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of these can be empty, but the files need to exist.&lt;/p&gt;

&lt;p&gt;As an example, I always want logging during development, but not
during production or testing.&lt;/p&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;./config/development.js&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This would be merged during the &lt;code class=&quot;highlighter-rouge&quot;&gt;Object.assign&lt;/code&gt; step in
&lt;code class=&quot;highlighter-rouge&quot;&gt;./config/index.js&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;deep-merging&quot;&gt;Deep merging&lt;/h2&gt;

&lt;p&gt;The main limitation to the above is if the configuration has a deeper
structure. The above works great when everything is in the top level
of the configuration object, but as soon as you go deeper (objects
within objects, etc), you need to do a deep merge.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://lodash.com&quot; title=&quot;A modern JavaScript utility library delivering modularity, performance &amp;amp; extras.&quot;&gt;Lodash&lt;/a&gt; library has a few different methods that can be used
here. The one I like to use is &lt;code class=&quot;highlighter-rouge&quot;&gt;_.merge&lt;/code&gt; since it works like
&lt;code class=&quot;highlighter-rouge&quot;&gt;Object.assign&lt;/code&gt; in merging the members from left to
right. (See &lt;a href=&quot;http://stackoverflow.com/questions/19965844/lodash-difference-between-extend-assign-and-merge#19966511&quot; title=&quot;explanation of extend, assign, and merge in lodash&quot;&gt;stackoverflow&lt;/a&gt; for a more thorough explanation
and comparison.)&lt;/p&gt;

&lt;h2 id=&quot;using-the-configuration&quot;&gt;Using the configuration&lt;/h2&gt;

&lt;p&gt;Now, with my per-environment configuration set, I use it in my
application. In &lt;code class=&quot;highlighter-rouge&quot;&gt;./index.js&lt;/code&gt; (the root of the app), I put:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./config'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Deeper down, in a server component, for example, I need to use the
appropriate path lift to find it. Getting the configuration into the
posts controller:&lt;/p&gt;

&lt;p&gt;File &lt;code class=&quot;highlighter-rouge&quot;&gt;./app/posts/postsController.js&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'../../../config'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// might need more '../' to get to the right level&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When you need a configuration value, it’s right there on the &lt;code class=&quot;highlighter-rouge&quot;&gt;config&lt;/code&gt;
object:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'development'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// ... do something you only do in development&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 26 Dec 2016 09:06:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/javascript/2016/12/26/js-app-config-pattern/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/javascript/2016/12/26/js-app-config-pattern/</guid>
        
        <category>javascript</category>
        
        <category>application</category>
        
        <category>configuration</category>
        
        <category>config</category>
        
        <category>patterns</category>
        
        <category>webdev</category>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>Changing the &quot;Return To Shop&quot; link and text in an empty WooCommerce cart</title>
        <description>&lt;p&gt;Tonight’s learning opportunity provided by the lovely Elise who brings
fun things to research (after some hair pulling and teeth gnashing).&lt;/p&gt;

&lt;p&gt;In WooCommerce, if you’re cart is empty, it displays a link “Return To
Shop” which if clicked takes you back to the Shop page.&lt;/p&gt;

&lt;p&gt;In this case, though, Elise wanted it to go to a different URL, and
didn’t want it to say “Return To Shop”.&lt;/p&gt;

&lt;p&gt;We looked high and low in the plugin, delving through the source and
the html output to try and figure out where this was getting called.&lt;/p&gt;

&lt;p&gt;Elise had to leave before we solved it, but later slacked me this
link:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://nicola.blog/2015/07/20/change-the-return-to-shop-button-url-in-the-cart-page/&quot;&gt;Change the Return to shop button URL in the cart page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Meanwhile, I’d grep’d the source tree of the WooCommerce plugin I’d
installed in my sandbaox, and found the following in
&lt;code class=&quot;highlighter-rouge&quot;&gt;wp-content/plugins/woocommerce/templates/cart/cart-empty.php&lt;/code&gt;, line
36:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;/**
 * Empty cart page
 *
 * This template can be overridden by copying it to yourtheme/woocommerce/cart/cart-empty.php.
 *
 * HOWEVER, on occasion WooCommerce will need to update template files and you
 * (the theme developer) will need to copy the new files to your theme to
 * maintain compatibility. We try to do this as little as possible, but it does
 * happen. When this occurs the version of the template file will be bumped and
 * the readme will list any important changes.
 *
 * @see 	    https://docs.woocommerce.com/document/template-structure/
 * @author  WooThemes
 * @package WooCommerce/Templates
 * @version 2.0.0
 */&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;defined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ABSPATH'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Exit if accessed directly
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;wc_print_notices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cart-empty&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Your cart is currently empty.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'woocommerce'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;do_action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'woocommerce_cart_is_empty'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wc_get_page_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'shop'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;return-to-shop&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;button wc-backward&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;esc_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;apply_filters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'woocommerce_return_to_shop_redirect'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wc_get_page_permalink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'shop'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Return To Shop'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'woocommerce'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This showed the link creating, the variable
&lt;code class=&quot;highlighter-rouge&quot;&gt;woocommerce_return_to_shop_redirect&lt;/code&gt; filter, and the text being
applied to the anchor tag.&lt;/p&gt;

&lt;p&gt;The comments in the file would have led us to copy the above template
and change the text, but that felt wrong, so I went looking for how to
change the localization text that matches ‘Return To Shop’ in the
woocommerce &lt;code class=&quot;highlighter-rouge&quot;&gt;.pot&lt;/code&gt; files.&lt;/p&gt;

&lt;p&gt;I was directed to the following page:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.woocommerce.com/document/woocommerce-localization/&quot;&gt;Translating WooCommerce (Localization)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;down to the last section on the page:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.woocommerce.com/document/woocommerce-localization/#section-6&quot;&gt;Translating Text without a localization file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;which in turn led me to the “Say What?” plugin at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://wordpress.org/plugins/say-what/&quot;&gt;Say what? WordPress Plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now with both of these solutions in hand, Elise is able to change both
the url and the label of the button in the cart.&lt;/p&gt;
</description>
        <pubDate>Tue, 20 Dec 2016 23:58:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/wordpress/2016/12/20/changing-the-return-to-shop-link-and-text-in-an-empty-woocommerce-cart/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/wordpress/2016/12/20/changing-the-return-to-shop-link-and-text-in-an-empty-woocommerce-cart/</guid>
        
        <category>wordpress</category>
        
        <category>woocommerce</category>
        
        <category>customization</category>
        
        <category>say-what</category>
        
        
        <category>wordpress</category>
        
      </item>
    
  </channel>
</rss>
<!-- touch 1 -->
