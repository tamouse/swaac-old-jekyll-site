<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software as a Craft</title>
    <description>The development blog of tamouse</description>
    <link>http://swaac.tamouse.org/</link>
    <atom:link href="http://swaac.tamouse.org/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 26 Dec 2016 12:16:35 -0600</pubDate>
    <lastBuildDate>Mon, 26 Dec 2016 12:16:35 -0600</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>JS App Config Pattern</title>
        <description>&lt;p&gt;Nothing really new here, just writing down this pattern I’ve noticed
in various JavaScript apps (notably &lt;a href=&quot;http://expressjs.com/&quot; title=&quot;Fast, unopinionated, minimalist web framework for Node.js&quot;&gt;Express&lt;/a&gt; apps). First seen in &lt;a href=&quot;https://twitter.com/scotups&quot; title=&quot;Scott Moss on Twitter&quot;&gt;Scott
Moss’s&lt;/a&gt; &lt;a href=&quot;https://frontendmasters.com/courses/api-design-nodejs/&quot; title=&quot;Learn API design in Node.js using Express class&quot;&gt;‘API Design’ course&lt;/a&gt; at
&lt;a href=&quot;https://frontendmasters.com&quot; title=&quot;Frontend Masters: Learn JavaScript, React, Angular and more,..deeply&quot;&gt;FrontendMasters&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;concept&quot;&gt;Concept&lt;/h2&gt;

&lt;p&gt;The basic concept is to collect all application configuration in one
place so you don’t have to litter it all over the application. Use a
“standard” JS component idea, as one does with Angular and React to put
it all into a single location.&lt;/p&gt;

&lt;h2 id=&quot;use-case&quot;&gt;Use Case&lt;/h2&gt;

&lt;p&gt;My use case will be a rather generic Express API application. Using a
service- or resource-oriented structure, I have an folder structures
like so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  app/
    posts/
      index.js
      postModel.js
      postsController.js
      postsRoutes.js
    users/
      index.js
      userModel.js
      usersContoller.js
      usersRoutes.js
    index.js
  config/
    development.js
    index.js
    production.js
    test.js
  public/
    images/
    javascripts/
    stylesheets/
    index.html
  index.js
  package.json
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I’m taking advantage of the convention of using an &lt;code class=&quot;highlighter-rouge&quot;&gt;index.js&lt;/code&gt; at the root
of the components (and app) to make requiring the module as simple as
providing the directory name.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-configuration-module&quot;&gt;Creating the configuration module&lt;/h2&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;./config/index.js&lt;/code&gt;, I have the following:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;baseConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'development'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;jwtSecret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JWT_SECRET&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;envConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;baseConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;baseConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;envConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A &lt;strong&gt;HUGE&lt;/strong&gt; caveat, of course, is to &lt;strong&gt;NEVER&lt;/strong&gt; save secrets and
credentials in git (or Github, Gitlab, BitBucket, etc.) since they
will be there forever, even if you later remove them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Always use environment variables to configure secret values.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;creating-the-environment-configurations&quot;&gt;Creating the environment configurations&lt;/h2&gt;

&lt;p&gt;The environment configurations would be the same as the environment
names with ‘.js’ added, so:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;development.js&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;testing.js&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;production.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of these can be empty, but the files need to exist.&lt;/p&gt;

&lt;p&gt;As an example, I always want logging during development, but not
during production or testing.&lt;/p&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;./config/development.js&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This would be merged during the &lt;code class=&quot;highlighter-rouge&quot;&gt;Object.assign&lt;/code&gt; step in
&lt;code class=&quot;highlighter-rouge&quot;&gt;./config/index.js&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;deep-merging&quot;&gt;Deep merging&lt;/h2&gt;

&lt;p&gt;The main limitation to the above is if the configuration has a deeper
structure. The above works great when everything is in the top level
of the configuration object, but as soon as you go deeper (objects
within objects, etc), you need to do a deep merge.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://lodash.com&quot; title=&quot;A modern JavaScript utility library delivering modularity, performance &amp;amp; extras.&quot;&gt;Lodash&lt;/a&gt; library has a few different methods that can be used
here. The one I like to use is &lt;code class=&quot;highlighter-rouge&quot;&gt;_.merge&lt;/code&gt; since it works like
&lt;code class=&quot;highlighter-rouge&quot;&gt;Object.assign&lt;/code&gt; in merging the members from left to
right. (See &lt;a href=&quot;http://stackoverflow.com/questions/19965844/lodash-difference-between-extend-assign-and-merge#19966511&quot; title=&quot;explanation of extend, assign, and merge in lodash&quot;&gt;stackoverflow&lt;/a&gt; for a more thorough explanation
and comparison.)&lt;/p&gt;

&lt;h2 id=&quot;using-the-configuration&quot;&gt;Using the configuration&lt;/h2&gt;

&lt;p&gt;Now, with my per-environment configuration set, I use it in my
application. In &lt;code class=&quot;highlighter-rouge&quot;&gt;./index.js&lt;/code&gt; (the root of the app), I put:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./config'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Deeper down, in a server component, for example, I need to use the
appropriate path lift to find it. Getting the configuration into the
posts controller:&lt;/p&gt;

&lt;p&gt;File &lt;code class=&quot;highlighter-rouge&quot;&gt;./app/posts/postsController.js&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'../../../config'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// might need more '../' to get to the right level&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When you need a configuration value, it’s right there on the &lt;code class=&quot;highlighter-rouge&quot;&gt;config&lt;/code&gt;
object:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'development'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// ... do something you only do in development&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 26 Dec 2016 09:06:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/javascript/2016/12/26/js-app-config-pattern/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/javascript/2016/12/26/js-app-config-pattern/</guid>
        
        <category>javascript</category>
        
        <category>application</category>
        
        <category>configuration</category>
        
        <category>config</category>
        
        <category>patterns</category>
        
        <category>webdev</category>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>Changing the &quot;Return To Shop&quot; link and text in an empty WooCommerce cart</title>
        <description>&lt;p&gt;Tonight’s learning opportunity provided by the lovely Elise who brings
fun things to research (after some hair pulling and teeth gnashing).&lt;/p&gt;

&lt;p&gt;In WooCommerce, if you’re cart is empty, it displays a link “Return To
Shop” which if clicked takes you back to the Shop page.&lt;/p&gt;

&lt;p&gt;In this case, though, Elise wanted it to go to a different URL, and
didn’t want it to say “Return To Shop”.&lt;/p&gt;

&lt;p&gt;We looked high and low in the plugin, delving through the source and
the html output to try and figure out where this was getting called.&lt;/p&gt;

&lt;p&gt;Elise had to leave before we solved it, but later slacked me this
link:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://nicola.blog/2015/07/20/change-the-return-to-shop-button-url-in-the-cart-page/&quot;&gt;Change the Return to shop button URL in the cart page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Meanwhile, I’d grep’d the source tree of the WooCommerce plugin I’d
installed in my sandbaox, and found the following in
&lt;code class=&quot;highlighter-rouge&quot;&gt;wp-content/plugins/woocommerce/templates/cart/cart-empty.php&lt;/code&gt;, line
36:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;/**
 * Empty cart page
 *
 * This template can be overridden by copying it to yourtheme/woocommerce/cart/cart-empty.php.
 *
 * HOWEVER, on occasion WooCommerce will need to update template files and you
 * (the theme developer) will need to copy the new files to your theme to
 * maintain compatibility. We try to do this as little as possible, but it does
 * happen. When this occurs the version of the template file will be bumped and
 * the readme will list any important changes.
 *
 * @see 	    https://docs.woocommerce.com/document/template-structure/
 * @author  WooThemes
 * @package WooCommerce/Templates
 * @version 2.0.0
 */&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;defined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ABSPATH'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Exit if accessed directly
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;wc_print_notices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cart-empty&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Your cart is currently empty.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'woocommerce'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;do_action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'woocommerce_cart_is_empty'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wc_get_page_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'shop'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;return-to-shop&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;button wc-backward&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;esc_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;apply_filters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'woocommerce_return_to_shop_redirect'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wc_get_page_permalink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'shop'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Return To Shop'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'woocommerce'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This showed the link creating, the variable
&lt;code class=&quot;highlighter-rouge&quot;&gt;woocommerce_return_to_shop_redirect&lt;/code&gt; filter, and the text being
applied to the anchor tag.&lt;/p&gt;

&lt;p&gt;The comments in the file would have led us to copy the above template
and change the text, but that felt wrong, so I went looking for how to
change the localization text that matches ‘Return To Shop’ in the
woocommerce &lt;code class=&quot;highlighter-rouge&quot;&gt;.pot&lt;/code&gt; files.&lt;/p&gt;

&lt;p&gt;I was directed to the following page:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.woocommerce.com/document/woocommerce-localization/&quot;&gt;Translating WooCommerce (Localization)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;down to the last section on the page:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.woocommerce.com/document/woocommerce-localization/#section-6&quot;&gt;Translating Text without a localization file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;which in turn led me to the “Say What?” plugin at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://wordpress.org/plugins/say-what/&quot;&gt;Say what? WordPress Plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now with both of these solutions in hand, Elise is able to change both
the url and the label of the button in the cart.&lt;/p&gt;
</description>
        <pubDate>Tue, 20 Dec 2016 23:58:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/wordpress/2016/12/20/changing-the-return-to-shop-link-and-text-in-an-empty-woocommerce-cart/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/wordpress/2016/12/20/changing-the-return-to-shop-link-and-text-in-an-empty-woocommerce-cart/</guid>
        
        <category>wordpress</category>
        
        <category>woocommerce</category>
        
        <category>customization</category>
        
        <category>say-what</category>
        
        
        <category>wordpress</category>
        
      </item>
    
      <item>
        <title>flexbox website with fixed headers and footer</title>
        <description>&lt;p&gt;I was playing around with some React stuff and came upon a basic
layout issue. I wanted to have the standard header + footer + main +
sidebar sort of layout, but I wanted to do it flexbox. I also wanted
the header and footer to be fixed to the top and bottom, respectively,
and for the main content to be able to scroll inside it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UPDATE!!&lt;/strong&gt; Now with more responsive!&lt;/p&gt;

&lt;p&gt;The results can be seen at &lt;a href=&quot;https://github.com/tamouse/sample-flex-website-layout&quot;&gt;this repo&lt;/a&gt;, and a demo
	at &lt;a href=&quot;https://tamouse.github.io/sample-flex-website-layout/&quot;&gt;Flex Standard Layout (demo)&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;page-boundaries-header-and-footer&quot;&gt;Page Boundaries: Header and Footer&lt;/h2&gt;

&lt;p&gt;Making the header and footer fixed to top and bottom is fairly easy.
The following attributes generally work well:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.fixed-top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.fixed-bottom&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aboslute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.fixed-top&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.fixed-bottom&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;full-height-columns&quot;&gt;Full-height columns&lt;/h2&gt;

&lt;p&gt;Getting columns of equal height is a bit tricksier, and I resorted to
what seems like a hack.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.fixed-middle&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.fixed-middle&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.column&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;wheres-the-flex&quot;&gt;Where’s the flex?&lt;/h2&gt;

&lt;p&gt;This isn’t very flexy yet, so I added in some goodness for that:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.fixed-middle&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;dislplay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.fixed-middle&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.col&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Much better, but then the sidebars and central main content area are
all the same width. I want the content area to dominate.&lt;/p&gt;

&lt;p&gt;I arranged the main content part to come before the sidebars, like so:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fixed-middle&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;main-content&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;role=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- main content --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;aside&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;left-side&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- left side bar content --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/aside&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;aside&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;right-side&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- right sidebar content --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/aside&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After removing &lt;code class=&quot;highlighter-rouge&quot;&gt;.fixed-middle .col&lt;/code&gt; CSS definition, I put in:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.fixed-middle&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.main-content&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.fixed-middle&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.left-side&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.fixed-middle&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.right-side&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This tells flexbox to let the main content area grow to 5 times the
size of the sidebars, but make sure the left side bar’s content comes
first in the row.&lt;/p&gt;

&lt;h2 id=&quot;header-and-footer-redux&quot;&gt;Header and Footer Redux&lt;/h2&gt;

&lt;p&gt;I wanted to extend this even further, so the case where you may have
multiple “widgets” in the header or footer, and so redid the same idea
for the those, but keeping the flex to 1.&lt;/p&gt;

&lt;p&gt;If I ended up with a 2/3 widget and 1/3 widget, I could mark them with
appropriate classes and set the flex accordingly.&lt;/p&gt;

&lt;h2 id=&quot;sample-repo-and-demo&quot;&gt;Sample Repo and Demo&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tamouse/sample-flex-website-layout&quot;&gt;sample repo on Github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tamouse.github.io/sample-flex-website-layout/&quot;&gt;demonstration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;making-it-responsive&quot;&gt;Making it responsive&lt;/h2&gt;

&lt;p&gt;This turned out to be really easy, and all I needed to do is wrap the
flexbox and absolute positioning in a media query.&lt;/p&gt;

&lt;p&gt;I had put the page header after the main content, but that didn’t look
as good, so I moved that to the top.&lt;/p&gt;

&lt;p&gt;The image was misbehaving as well, so I introduced an
&lt;code class=&quot;highlighter-rouge&quot;&gt;.img-responsive&lt;/code&gt; class that limited the width to 100%.&lt;/p&gt;
</description>
        <pubDate>Sun, 04 Dec 2016 14:31:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/css/2016/12/04/flexbox-website-with-fixed-headers-and-footer/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/css/2016/12/04/flexbox-website-with-fixed-headers-and-footer/</guid>
        
        <category>css</category>
        
        <category>flexbox</category>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>Todo app using just React with POJS - no JSX or ES6</title>
        <description>&lt;p&gt;I just moderated the &lt;a href=&quot;https://frontendmasters.com&quot;&gt;Frontend Masters&lt;/a&gt;
class “Complete Introduction to React” taught
by &lt;a href=&quot;https://twitter.com/holtbt&quot;&gt;Brian Holt&lt;/a&gt; of Netflix and Reddit
fame.&lt;/p&gt;

&lt;p&gt;It was a great course, but as moderator I was doing a lot of things to
keep the chat room flowing and didn’t get to pay much attention to the
detail Brian was presenting, and definitely didn’t have time in class
to try out stuff.&lt;/p&gt;

&lt;p&gt;So I thought I’d just give the first bit of Brian’s presentation a go,
where we just worked with React as a plain JS library, nothing fancy,
no JSX transpiling, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tamouse/todo-react-nojsx&quot;&gt;This&lt;/a&gt; is the result, the canonical single page Todo
application.&lt;/p&gt;

&lt;p&gt;It was pretty easy, and pretty fun. I kept only to
the &lt;a href=&quot;https://facebook.github.io/react/docs/&quot;&gt;React docs&lt;/a&gt;, especially&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/docs/react-without-es6.html&quot;&gt;React Without ES6 - React&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/docs/react-without-jsx.html&quot;&gt;React Without JSX - React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m pleased with the experiement.&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Dec 2016 09:56:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/javascript/react/2016/12/03/todo-app-using-just-react-with-pojs-no-jsx-or-es6/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/javascript/react/2016/12/03/todo-app-using-just-react-with-pojs-no-jsx-or-es6/</guid>
        
        <category>javascript</category>
        
        <category>react</category>
        
        <category>learning</category>
        
        <category>todoapp</category>
        
        <category>frontend-masters</category>
        
        <category>brian-holt</category>
        
        
        <category>javascript</category>
        
        <category>react</category>
        
      </item>
    
      <item>
        <title>Ask Me Anything</title>
        <description>&lt;p&gt;I started a new thing: an “Ask Me Anything” github repo where you can
ask me any question as an issue, I’ll try to answer it.&lt;/p&gt;

&lt;p&gt;I got the idea from
reading &lt;a href=&quot;https://github.com/notwaldorf&quot;&gt;@notwaldorf&lt;/a&gt;’s site about the
&lt;a href=&quot;https://github.com/notwaldorf/font-style-matcher&quot;&gt;font-style-matcher&lt;/a&gt;
tool she wrote (which you should also check out).&lt;/p&gt;

&lt;p&gt;If you have questions, &lt;a href=&quot;https://github.com/tamouse/ama/issues/new&quot;&gt;ask me!&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Nov 2016 07:59:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/github/2016/11/30/ask-me-anything/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/github/2016/11/30/ask-me-anything/</guid>
        
        <category>ama</category>
        
        <category>ask-me-anything</category>
        
        <category>github</category>
        
        
        <category>github</category>
        
      </item>
    
      <item>
        <title>Tool: Font Style Matcher</title>
        <description>&lt;p&gt;Beware the &lt;em&gt;F&lt;/em&gt;lash &lt;em&gt;O&lt;/em&gt;f &lt;em&gt;U&lt;/em&gt;nstyled &lt;em&gt;T&lt;/em&gt;ext! That moment of flicker on
your page before your webfonts have downloaded and the screen is
showoing your fallback font.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/notwaldorf&quot;&gt;Monica Dinculescu&lt;/a&gt; has written a nice
tool that &lt;em&gt;shows&lt;/em&gt; how your lovely chosen webfont will FOUT (yeah, I
just verbed that acronym) against your backup font, but more
interestingly, &lt;em&gt;what you can do about it&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Here’s a screenshot comparing Impact and Montserrat:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://swaac.tamouse.org.s3.amazonaws.com/images/font-style-matcher-impact-montserrat.png&quot; alt=&quot;FOUT: Impact vs. Montserrat&quot; title=&quot;screenshot comparing Impact and Monsterrat fonts for FOUT&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s a really great tool!&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Nov 2016 07:09:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/typography/2016/11/30/tool-font-style-matcher/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/typography/2016/11/30/tool-font-style-matcher/</guid>
        
        <category>FOUT</category>
        
        <category>fonts</category>
        
        <category>webfonts</category>
        
        
        <category>typography</category>
        
      </item>
    
      <item>
        <title>TIL: target=&quot;_blank&quot; with no rel=&quot;noopener&quot;</title>
        <description>&lt;p&gt;In yesterdays CSS-Tricks
column
&lt;a href=&quot;https://css-tricks.com/random-interesting-facts-htmlsvg-usage/&quot;&gt;Random Interesting Facts on HTMLSVG usage  CSS-Tricks&lt;/a&gt;,
Catalin Rosu explains something I’d never heard before, and it can be
pretty important:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;target=_blank w/ or w/o rel=noopener&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;43,924,869 of the anchors we analyzed are using target=”_blank” without a rel=”noopener” conjunction. In this case, if rel=”noopener” is missing, you are leaving your users open to a phishing attack and it’s considered a security vulnerability.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;table&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;Anchor/Link&lt;/th&gt;
        &lt;th&gt;Count&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;[target=_blank]&lt;/td&gt;
        &lt;td&gt;43,924,869&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;[rel=noopener]&lt;/td&gt;
        &lt;td&gt;40,756&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;[target=_blank][rel=noopener]&lt;/td&gt;
        &lt;td&gt;35,604&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;MDN:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;When using target you should consider adding rel=”noopener noreferrer” to avoid exploitation of the window.opener API.&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://dev.to/ben/the-targetblank-vulnerability-by-example&quot;&gt;Ben Halpern&lt;/a&gt; and
&lt;a href=&quot;https://mathiasbynens.github.io/rel-noopener/&quot;&gt;Mathias Bynens&lt;/a&gt; also
wrote some good articles on this matter and the common advice is:
don’t use target=_blank, unless you have good reasons.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I may need to rethink how I often I use &lt;code class=&quot;highlighter-rouge&quot;&gt;target=&quot;_blank&quot;&lt;/code&gt;. Lately I’ve
been creating slide presentations using &lt;code class=&quot;highlighter-rouge&quot;&gt;reveal.js&lt;/code&gt; and I include
links in the slide show; I think it’s easier for students if I open up
a new tab rather than interrupting the flow of the slide show.&lt;/p&gt;

&lt;p&gt;I think for those, I’ll go ahead an add the recommended &lt;code class=&quot;highlighter-rouge&quot;&gt;rel=&quot;noopener
noreferrer&quot;&lt;/code&gt;. But elsewhere, I’ll consider curtailing my use of
&lt;code class=&quot;highlighter-rouge&quot;&gt;target=&quot;_blank&quot;&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 26 Nov 2016 14:05:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/html/2016/11/26/til-target-equals-blank-with-no-rel-equals-noopener/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/html/2016/11/26/til-target-equals-blank-with-no-rel-equals-noopener/</guid>
        
        <category>security</category>
        
        
        <category>html</category>
        
      </item>
    
      <item>
        <title>installing emacs on Mac with homebrew</title>
        <description>&lt;p&gt;Here’s the latest that seems to work for me:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew cask install emacs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This installed version 25.1.1 on 14 Nov 2016.&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Nov 2016 10:09:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/emacs/2016/11/14/installing-emacs-on-mac-with-homebrew/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/emacs/2016/11/14/installing-emacs-on-mac-with-homebrew/</guid>
        
        <category>mac</category>
        
        <category>osx</category>
        
        <category>emacs</category>
        
        <category>homebrew</category>
        
        
        <category>emacs</category>
        
      </item>
    
      <item>
        <title>Installing WordPress Things Without FTP</title>
        <description>&lt;p&gt;Recently having set up a couple of WordPress sandbox areas, which
would not have any FTP access points for upgrading and installing WP
themes and plugins, I ran across this feature where the WP install can
“reach out” and pull in the items it needs, rather than telling the WP
repository to push the items to the site.&lt;/p&gt;

&lt;p&gt;In the &lt;a href=&quot;https://codex.wordpress.org/Editing_wp-config.php#WordPress_Upgrade_Constants&quot; title=&quot;WordPress Upgrade Constants&quot; target=&quot;_blank&quot;&gt;codex&lt;/a&gt;
there is a section on “WordPress Upgrade Constants”, and in particular
it describes &lt;code class=&quot;highlighter-rouge&quot;&gt;FS_METHOD&lt;/code&gt; which turns the nature of installing upgrades
around.&lt;/p&gt;

&lt;p&gt;By adding the following line to the &lt;code class=&quot;highlighter-rouge&quot;&gt;wp-config.php&lt;/code&gt; file, you can
enable this behaviour:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;define('FS_METHOD', 'direct');&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Putting that at the end of the file turns on this ability, which was a
revelation for working on these sandbox sites.&lt;/p&gt;

&lt;p&gt;This is what the page has to say:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;FS_METHOD forces the filesystem method. It should only be “direct”, “ssh2”, “ftpext”, or “ftpsockets”. Generally, you should only change this if you are experiencing update problems. If you change it and it doesn’t help, change it back/remove it. Under most circumstances, setting it to ‘ftpsockets’ will work if the automatically chosen method does not. Note that your selection here has serious security implications. If you are not familiar with them, you should seek help before making a change.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;(Primary Preference) “direct” forces it to use Direct File I/O requests from within PHP. It is the option chosen by default.&lt;/li&gt;
    &lt;li&gt;(Secondary Preference) “ssh2” is to force the usage of the SSH PHP Extension if installed&lt;/li&gt;
    &lt;li&gt;(3rd Preference) “ftpext” is to force the usage of the FTP PHP Extension for FTP Access, and finally&lt;/li&gt;
    &lt;li&gt;(4th Preference) “ftpsockets” utilises the PHP Sockets Class for FTP Access.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;I chose to use &lt;code class=&quot;highlighter-rouge&quot;&gt;direct&lt;/code&gt; for the sandboxes.&lt;/p&gt;

&lt;p&gt;Take the warning about security implications seriously. You don’t want
any production servers to be able to update if someone gains access.&lt;/p&gt;

&lt;p&gt;I’ve handled production upgrades by moving the updated software up to
the production machine myself &lt;em&gt;after&lt;/em&gt; testing the upgrades. There is
&lt;em&gt;no&lt;/em&gt; FTP (secure or otherwise) on my production installations. BTDT
got burned badly.&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Nov 2016 00:21:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/wordpress/2016/11/14/installing-wordpress-things-without-ftp/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/wordpress/2016/11/14/installing-wordpress-things-without-ftp/</guid>
        
        <category>installation</category>
        
        <category>plugins</category>
        
        <category>themes</category>
        
        
        <category>wordpress</category>
        
      </item>
    
      <item>
        <title>FrontendMasters Course: DevOps for Frontend Devs</title>
        <description>&lt;p&gt;On November 11, 2016, I attended
the &lt;a href=&quot;https://frontendmasters.com&quot; target=&quot;_blank&quot;&gt;FrontendMasters&lt;/a&gt;
course “DevOps for Frontend Devs” taught
by &lt;a href=&quot;https://jemyoung.com/about/&quot; target=&quot;_blank&quot;&gt;Jem Young&lt;/a&gt; from
Netflix.&lt;/p&gt;

&lt;p&gt;It was a great class. Here’s the checklist I built for bringing up a
basic droplet on &lt;a href=&quot;https://digitalocean.com&quot; target=&quot;_blank&quot;&gt;Digital Ocean&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;create-an-ssh-key-pair&quot;&gt;create an ssh key pair&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;you cna reuse one you already have, or create a new one&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;create-a-new-server&quot;&gt;create a new server&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] create a droplet on DO&lt;/li&gt;
  &lt;li&gt;[ ] copy and save the new droplet’s IP address
    &lt;ul&gt;
      &lt;li&gt;[ ] add to /etc/hosts to make it easy&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[ ] upload the PUBLIC key you created or are reusing&lt;/li&gt;
  &lt;li&gt;[ ] log into the new droplet: &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh -i $HOME/.ssh/id_rsa
    root@$NEW_IP&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;on-the-new-server-as-root&quot;&gt;on the new server, as root&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] Change root password to something you know (DO set’s it to
something randome and never tells you what it is.)
    &lt;ul&gt;
      &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;passwd&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get update&lt;/code&gt; to refresh DPKG indexes&lt;/li&gt;
  &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get install -y htop&lt;/code&gt; nice top() replacement&lt;/li&gt;
  &lt;li&gt;[ ] add user &lt;code class=&quot;highlighter-rouge&quot;&gt;tamara&lt;/code&gt;:
    &lt;ul&gt;
      &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;adduser tamara&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;usermod -aG sudo tamara&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[ ] add new user &lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;adduser git&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;usermod -aG sudo git&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;back-on-the-home-machine&quot;&gt;back on the home machine&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] move public key to users
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Users: [tamara, git]&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat ~/.ssh/is_rsa.pub | ssh $USERa@$NEW_SERVER 'mkdir -p .ssh &amp;amp;&amp;amp; cat &amp;gt;&amp;gt; .ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;on-new-server-regular-user-from-now-on&quot;&gt;on new server, regular user (from now on)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Disable access via &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo vi /etc/ssh/sshd_config&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;[ ] Set &lt;code class=&quot;highlighter-rouge&quot;&gt;PermitRootLogin: no&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;[ ] restart: &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo service sshd restart&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;ssh works too&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;get-a-domain-name&quot;&gt;get a domain name&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] buy a domain name from some place&lt;/li&gt;
  &lt;li&gt;[ ] for the domain, create 2 “A” records
    &lt;ul&gt;
      &lt;li&gt;[ ] “@” point to new server’s IP&lt;/li&gt;
      &lt;li&gt;[ ] “www” point to new server’s IP&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[ ]&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;set-up-the-web-server&quot;&gt;set up the web server&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] install nginx&lt;/li&gt;
  &lt;li&gt;[ ] install nodejs and npm&lt;/li&gt;
  &lt;li&gt;[ ] symlink node -&amp;gt; nodejs&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;setting-up-the-application&quot;&gt;setting up the application&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] clone the app&lt;/li&gt;
  &lt;li&gt;[ ] cd into the app dir&lt;/li&gt;
  &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;node app.js&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;nohup node app.js &amp;amp;&lt;/code&gt; to make it run forever in the background&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;build-and-deploy-an-app&quot;&gt;build and deploy an app&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;using Gulp&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 13 Nov 2016 12:52:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/class/2016/11/13/frontendmasters-course-devops-for-frontend-devs/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/class/2016/11/13/frontendmasters-course-devops-for-frontend-devs/</guid>
        
        <category>frontendmasters</category>
        
        <category>devops</category>
        
        <category>jemyoung</category>
        
        
        <category>class</category>
        
      </item>
    
  </channel>
</rss>
<!-- touch 1 -->
