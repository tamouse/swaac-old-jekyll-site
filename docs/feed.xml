<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software as a Craft</title>
    <description>The development blog of tamouse</description>
    <link>http://swaac.tamouse.org/</link>
    <atom:link href="http://swaac.tamouse.org/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 30 Nov 2016 08:07:07 -0600</pubDate>
    <lastBuildDate>Wed, 30 Nov 2016 08:07:07 -0600</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>Ask Me Anything</title>
        <description>&lt;p&gt;I started a new thing: an “Ask Me Anything” github repo where you can
ask me any question as an issue, I’ll try to answer it.&lt;/p&gt;

&lt;p&gt;I got the idea from
reading &lt;a href=&quot;https://github.com/notwaldorf&quot;&gt;@notwaldorf&lt;/a&gt;’s site about the
&lt;a href=&quot;https://github.com/notwaldorf/font-style-matcher&quot;&gt;font-style-matcher&lt;/a&gt;
tool she wrote (which you should also check out).&lt;/p&gt;

&lt;p&gt;If you have questions, &lt;a href=&quot;https://github.com/tamouse/ama/issues/new&quot;&gt;ask me!&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Nov 2016 07:59:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/github/2016/11/30/ask-me-anything/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/github/2016/11/30/ask-me-anything/</guid>
        
        <category>ama</category>
        
        <category>ask-me-anything</category>
        
        <category>github</category>
        
        
        <category>github</category>
        
      </item>
    
      <item>
        <title>Tool: Font Style Matcher</title>
        <description>&lt;p&gt;Beware the &lt;em&gt;F&lt;/em&gt;lash &lt;em&gt;O&lt;/em&gt;f &lt;em&gt;U&lt;/em&gt;nstyled &lt;em&gt;T&lt;/em&gt;ext! That moment of flicker on
your page before your webfonts have downloaded and the screen is
showoing your fallback font.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/notwaldorf&quot;&gt;Monica Dinculescu&lt;/a&gt; has written a nice
tool that &lt;em&gt;shows&lt;/em&gt; how your lovely chosen webfont will FOUT (yeah, I
just verbed that acronym) against your backup font, but more
interestingly, &lt;em&gt;what you can do about it&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Here’s a screenshot comparing Impact and Montserrat:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://swaac.tamouse.org.s3.amazonaws.com/images/font-style-matcher-impact-montserrat.png&quot; alt=&quot;FOUT: Impact vs. Montserrat&quot; title=&quot;screenshot comparing Impact and Monsterrat fonts for FOUT&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s a really great tool!&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Nov 2016 07:09:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/typography/2016/11/30/tool-font-style-matcher/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/typography/2016/11/30/tool-font-style-matcher/</guid>
        
        <category>FOUT</category>
        
        <category>fonts</category>
        
        <category>webfonts</category>
        
        
        <category>typography</category>
        
      </item>
    
      <item>
        <title>TIL: target=&quot;_blank&quot; with no rel=&quot;noopener&quot;</title>
        <description>&lt;p&gt;In yesterdays CSS-Tricks
column
&lt;a href=&quot;https://css-tricks.com/random-interesting-facts-htmlsvg-usage/&quot;&gt;Random Interesting Facts on HTMLSVG usage  CSS-Tricks&lt;/a&gt;,
Catalin Rosu explains something I’d never heard before, and it can be
pretty important:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;target=_blank w/ or w/o rel=noopener&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;43,924,869 of the anchors we analyzed are using target=”_blank” without a rel=”noopener” conjunction. In this case, if rel=”noopener” is missing, you are leaving your users open to a phishing attack and it’s considered a security vulnerability.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;table&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;Anchor/Link&lt;/th&gt;
        &lt;th&gt;Count&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;[target=_blank]&lt;/td&gt;
        &lt;td&gt;43,924,869&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;[rel=noopener]&lt;/td&gt;
        &lt;td&gt;40,756&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;[target=_blank][rel=noopener]&lt;/td&gt;
        &lt;td&gt;35,604&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;MDN:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;When using target you should consider adding rel=”noopener noreferrer” to avoid exploitation of the window.opener API.&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://dev.to/ben/the-targetblank-vulnerability-by-example&quot;&gt;Ben Halpern&lt;/a&gt; and
&lt;a href=&quot;https://mathiasbynens.github.io/rel-noopener/&quot;&gt;Mathias Bynens&lt;/a&gt; also
wrote some good articles on this matter and the common advice is:
don’t use target=_blank, unless you have good reasons.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I may need to rethink how I often I use &lt;code class=&quot;highlighter-rouge&quot;&gt;target=&quot;_blank&quot;&lt;/code&gt;. Lately I’ve
been creating slide presentations using &lt;code class=&quot;highlighter-rouge&quot;&gt;reveal.js&lt;/code&gt; and I include
links in the slide show; I think it’s easier for students if I open up
a new tab rather than interrupting the flow of the slide show.&lt;/p&gt;

&lt;p&gt;I think for those, I’ll go ahead an add the recommended &lt;code class=&quot;highlighter-rouge&quot;&gt;rel=&quot;noopener
noreferrer&quot;&lt;/code&gt;. But elsewhere, I’ll consider curtailing my use of
&lt;code class=&quot;highlighter-rouge&quot;&gt;target=&quot;_blank&quot;&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 26 Nov 2016 14:05:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/html/2016/11/26/til-target-equals-blank-with-no-rel-equals-noopener/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/html/2016/11/26/til-target-equals-blank-with-no-rel-equals-noopener/</guid>
        
        <category>security</category>
        
        
        <category>html</category>
        
      </item>
    
      <item>
        <title>installing emacs on Mac with homebrew</title>
        <description>&lt;p&gt;Here’s the latest that seems to work for me:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew cask install emacs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This installed version 25.1.1 on 14 Nov 2016.&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Nov 2016 10:09:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/emacs/2016/11/14/installing-emacs-on-mac-with-homebrew/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/emacs/2016/11/14/installing-emacs-on-mac-with-homebrew/</guid>
        
        <category>mac</category>
        
        <category>osx</category>
        
        <category>emacs</category>
        
        <category>homebrew</category>
        
        
        <category>emacs</category>
        
      </item>
    
      <item>
        <title>Installing WordPress Things Without FTP</title>
        <description>&lt;p&gt;Recently having set up a couple of WordPress sandbox areas, which
would not have any FTP access points for upgrading and installing WP
themes and plugins, I ran across this feature where the WP install can
“reach out” and pull in the items it needs, rather than telling the WP
repository to push the items to the site.&lt;/p&gt;

&lt;p&gt;In the &lt;a href=&quot;https://codex.wordpress.org/Editing_wp-config.php#WordPress_Upgrade_Constants&quot; title=&quot;WordPress Upgrade Constants&quot; target=&quot;_blank&quot;&gt;codex&lt;/a&gt;
there is a section on “WordPress Upgrade Constants”, and in particular
it describes &lt;code class=&quot;highlighter-rouge&quot;&gt;FS_METHOD&lt;/code&gt; which turns the nature of installing upgrades
around.&lt;/p&gt;

&lt;p&gt;By adding the following line to the &lt;code class=&quot;highlighter-rouge&quot;&gt;wp-config.php&lt;/code&gt; file, you can
enable this behaviour:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;define('FS_METHOD', 'direct');&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Putting that at the end of the file turns on this ability, which was a
revelation for working on these sandbox sites.&lt;/p&gt;

&lt;p&gt;This is what the page has to say:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;FS_METHOD forces the filesystem method. It should only be “direct”, “ssh2”, “ftpext”, or “ftpsockets”. Generally, you should only change this if you are experiencing update problems. If you change it and it doesn’t help, change it back/remove it. Under most circumstances, setting it to ‘ftpsockets’ will work if the automatically chosen method does not. Note that your selection here has serious security implications. If you are not familiar with them, you should seek help before making a change.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;(Primary Preference) “direct” forces it to use Direct File I/O requests from within PHP. It is the option chosen by default.&lt;/li&gt;
    &lt;li&gt;(Secondary Preference) “ssh2” is to force the usage of the SSH PHP Extension if installed&lt;/li&gt;
    &lt;li&gt;(3rd Preference) “ftpext” is to force the usage of the FTP PHP Extension for FTP Access, and finally&lt;/li&gt;
    &lt;li&gt;(4th Preference) “ftpsockets” utilises the PHP Sockets Class for FTP Access.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;I chose to use &lt;code class=&quot;highlighter-rouge&quot;&gt;direct&lt;/code&gt; for the sandboxes.&lt;/p&gt;

&lt;p&gt;Take the warning about security implications seriously. You don’t want
any production servers to be able to update if someone gains access.&lt;/p&gt;

&lt;p&gt;I’ve handled production upgrades by moving the updated software up to
the production machine myself &lt;em&gt;after&lt;/em&gt; testing the upgrades. There is
&lt;em&gt;no&lt;/em&gt; FTP (secure or otherwise) on my production installations. BTDT
got burned badly.&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Nov 2016 00:21:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/wordpress/2016/11/14/installing-wordpress-things-without-ftp/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/wordpress/2016/11/14/installing-wordpress-things-without-ftp/</guid>
        
        <category>installation</category>
        
        <category>plugins</category>
        
        <category>themes</category>
        
        
        <category>wordpress</category>
        
      </item>
    
      <item>
        <title>FrontendMasters Course: DevOps for Frontend Devs</title>
        <description>&lt;p&gt;On November 11, 2016, I attended
the &lt;a href=&quot;https://frontendmasters.com&quot; target=&quot;_blank&quot;&gt;FrontendMasters&lt;/a&gt;
course “DevOps for Frontend Devs” taught
by &lt;a href=&quot;https://jemyoung.com/about/&quot; target=&quot;_blank&quot;&gt;Jem Young&lt;/a&gt; from
Netflix.&lt;/p&gt;

&lt;p&gt;It was a great class. Here’s the checklist I built for bringing up a
basic droplet on &lt;a href=&quot;https://digitalocean.com&quot; target=&quot;_blank&quot;&gt;Digital Ocean&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;create-an-ssh-key-pair&quot;&gt;create an ssh key pair&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;you cna reuse one you already have, or create a new one&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;create-a-new-server&quot;&gt;create a new server&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] create a droplet on DO&lt;/li&gt;
  &lt;li&gt;[ ] copy and save the new droplet’s IP address
    &lt;ul&gt;
      &lt;li&gt;[ ] add to /etc/hosts to make it easy&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[ ] upload the PUBLIC key you created or are reusing&lt;/li&gt;
  &lt;li&gt;[ ] log into the new droplet: &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh -i $HOME/.ssh/id_rsa
    root@$NEW_IP&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;on-the-new-server-as-root&quot;&gt;on the new server, as root&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] Change root password to something you know (DO set’s it to
something randome and never tells you what it is.)
    &lt;ul&gt;
      &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;passwd&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get update&lt;/code&gt; to refresh DPKG indexes&lt;/li&gt;
  &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get install -y htop&lt;/code&gt; nice top() replacement&lt;/li&gt;
  &lt;li&gt;[ ] add user &lt;code class=&quot;highlighter-rouge&quot;&gt;tamara&lt;/code&gt;:
    &lt;ul&gt;
      &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;adduser tamara&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;usermod -aG sudo tamara&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[ ] add new user &lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;adduser git&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;usermod -aG sudo git&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;back-on-the-home-machine&quot;&gt;back on the home machine&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] move public key to users
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Users: [tamara, git]&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat ~/.ssh/is_rsa.pub | ssh $USERa@$NEW_SERVER 'mkdir -p .ssh &amp;amp;&amp;amp; cat &amp;gt;&amp;gt; .ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;on-new-server-regular-user-from-now-on&quot;&gt;on new server, regular user (from now on)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Disable access via &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo vi /etc/ssh/sshd_config&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;[ ] Set &lt;code class=&quot;highlighter-rouge&quot;&gt;PermitRootLogin: no&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;[ ] restart: &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo service sshd restart&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;ssh works too&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;get-a-domain-name&quot;&gt;get a domain name&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] buy a domain name from some place&lt;/li&gt;
  &lt;li&gt;[ ] for the domain, create 2 “A” records
    &lt;ul&gt;
      &lt;li&gt;[ ] “@” point to new server’s IP&lt;/li&gt;
      &lt;li&gt;[ ] “www” point to new server’s IP&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[ ]&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;set-up-the-web-server&quot;&gt;set up the web server&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] install nginx&lt;/li&gt;
  &lt;li&gt;[ ] install nodejs and npm&lt;/li&gt;
  &lt;li&gt;[ ] symlink node -&amp;gt; nodejs&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;setting-up-the-application&quot;&gt;setting up the application&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[ ] clone the app&lt;/li&gt;
  &lt;li&gt;[ ] cd into the app dir&lt;/li&gt;
  &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;node app.js&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;[ ] &lt;code class=&quot;highlighter-rouge&quot;&gt;nohup node app.js &amp;amp;&lt;/code&gt; to make it run forever in the background&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;build-and-deploy-an-app&quot;&gt;build and deploy an app&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;using Gulp&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 13 Nov 2016 12:52:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/class/2016/11/13/frontendmasters-course-devops-for-frontend-devs/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/class/2016/11/13/frontendmasters-course-devops-for-frontend-devs/</guid>
        
        <category>frontendmasters</category>
        
        <category>devops</category>
        
        <category>jemyoung</category>
        
        
        <category>class</category>
        
      </item>
    
      <item>
        <title>Links from GDI Intro to WordPress Class</title>
        <description>&lt;p&gt;I was teaching a WordPress class this past Saturday (12 Nov 2016) that
was a huge amount of fun.&lt;/p&gt;

&lt;p&gt;At the end of the class, my co-teacher started dumping out links, and
I tried to capture them. No guarantees I got them all!&lt;/p&gt;

&lt;h2 id=&quot;good-links-for-learning-wordpress&quot;&gt;Good links for learning WordPress&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/196G0XINo_NKzi39lAld5Y4FccUN_sOiV5MmhhFBcNT4/edit&quot; title=&quot;class slides&quot; target=&quot;_blank&quot;&gt;class slides&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://cloud.digitalocean.com/droplets&quot; target=&quot;_blank&quot;&gt;Digital Ocean Droplets&lt;/a&gt; when you want to run your own server&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://getflywheel.com/&quot; target=&quot;_blank&quot;&gt;Flywheel Hosting&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://serverpress.com/get-desktopserver/&quot; target=&quot;_blank&quot;&gt;Desktop Server&lt;/a&gt; for easier migrating from development to production&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://codex.wordpress.org/&quot; title=&quot;The codex&quot; target=&quot;_blank&quot;&gt;The WordPress Codex&lt;/a&gt; the ultimate guide to WordPress&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://developer.wordpress.org/files/2014/10/template-hierarchy.png&quot; target=&quot;_blank&quot;&gt;Template Hierarchy Diagram&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://codex.wordpress.org/Child_Themes&quot; target=&quot;_blank&quot;&gt;Child Themes&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://wptavern.com/&quot; target=&quot;_blank&quot;&gt;WordPress Tavern&lt;/a&gt; for news and info on your
quest to learn WordPress&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://torquemag.io/&quot; target=&quot;_blank&quot;&gt;Torque Mag&lt;/a&gt; news about WordPress development&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://chrislema.com/blog/&quot; target=&quot;_blank&quot;&gt;Chris Lema’s blog&lt;/a&gt; really good source
of information&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://wp.zacgordon.com/&quot; target=&quot;_blank&quot;&gt;Zac Gordon’s Blog&lt;/a&gt; about learning WordPress&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.wp101.com/wordpress-tutorials/&quot; target=&quot;_blank&quot;&gt;WordPress Tutorials&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://bobwp.com/&quot; target=&quot;_blank&quot;&gt;BobWP’s blog&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.wpbeginner.com/&quot; target=&quot;_blank&quot;&gt;WordPress Beginner&lt;/a&gt; resources for the
WP noob&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.wp-bff.com/&quot; target=&quot;_blank&quot;&gt;WP BFF&lt;/a&gt; home of the &lt;a href=&quot;http://www.wordpressally.com/5daychallenge&quot; target=&quot;_blank&quot;&gt;5-day Website Challenge&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://digwp.com/book/&quot; target=&quot;_blank&quot;&gt;Digital WordPress Book&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 13 Nov 2016 12:25:00 -0600</pubDate>
        <link>http://swaac.tamouse.org/wordpress/2016/11/13/links-from-gdi-intro-to-wordpress-class/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/wordpress/2016/11/13/links-from-gdi-intro-to-wordpress-class/</guid>
        
        <category>links</category>
        
        <category>wordpress</category>
        
        <category>class</category>
        
        <category>gdi</category>
        
        
        <category>wordpress</category>
        
      </item>
    
      <item>
        <title>Signing a PDF with Preview</title>
        <description>&lt;p&gt;Here’s something I learned the other day: you can capture a graphical signature with Preview on macos to sign a PDF document.&lt;/p&gt;

&lt;p&gt;In the &lt;code class=&quot;highlighter-rouge&quot;&gt;Tools -&amp;gt; Annote -&amp;gt; Signatures&lt;/code&gt; menu, you’ll find a menu
item &lt;code class=&quot;highlighter-rouge&quot;&gt;Manage Signatures&lt;/code&gt; plus any signature you may have already added
to Preview.&lt;/p&gt;

&lt;p&gt;If you click it, you get the opportunity to create a new signature.&lt;/p&gt;

&lt;p&gt;Now, here comes the really cool part:&lt;/p&gt;

&lt;p&gt;You can enter a signature using a pointing device of your choice,
&lt;strong&gt;OR&lt;/strong&gt; you can take a picture of a signature with the web camera!&lt;/p&gt;

&lt;p&gt;I don’t know about you, but I have an awfully hard time getting a
decent looking signature with any pointing device: mouse, trackpad,
track pointer, track ball, even a graphics tablet and stylus
combination. Nothing feels right for me like pen on paper.&lt;/p&gt;

&lt;p&gt;Making a pen-and-paper signature now can be transfered into a PDF
directly, and this means no printing, signing, and scanning back in.&lt;/p&gt;

&lt;p&gt;This has probably existed for ages, but it’s something I just
learned. Never too young. :)&lt;/p&gt;
</description>
        <pubDate>Wed, 12 Oct 2016 11:55:00 -0500</pubDate>
        <link>http://swaac.tamouse.org/tools/2016/10/12/signing-a-pdf-with-preview/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/tools/2016/10/12/signing-a-pdf-with-preview/</guid>
        
        <category>tools</category>
        
        <category>signing</category>
        
        <category>pdf</category>
        
        <category>preview</category>
        
        <category>mac</category>
        
        <category>macos</category>
        
        
        <category>tools</category>
        
      </item>
    
      <item>
        <title>Testing blur() events in Cucumber/Capybara</title>
        <description>&lt;p&gt;After banging my head on this problem for a long time, chasing blog
posts, stackoverflow, lots of opinions, bug reports, and so on, I
finally asked my workmates, and together we arrived at a method that
works.&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;/h2&gt;

&lt;p&gt;There is apparently a bug, although it’s marked as INVALID in
bugzilla, that prevents &lt;code class=&quot;highlighter-rouge&quot;&gt;focus()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;blur()&lt;/code&gt; events from being
executed directly when the test browser is not focused.&lt;/p&gt;

&lt;p&gt;The links I chased:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://github.com/mattheworiordan/jquery-focus-selenium-webkit-fix&lt;/li&gt;
  &lt;li&gt;https://github.com/mattheworiordan/jquery-focus-selenium-webkit-fix/blob/master/app/assets/javascripts/jquery.focus.test-fix.js&lt;/li&gt;
  &lt;li&gt;https://makandracards.com/makandra/12661-how-to-solve-selenium-focus-issues&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And many many more…&lt;/p&gt;

&lt;h2 id=&quot;what-worked&quot;&gt;What worked&lt;/h2&gt;

&lt;p&gt;The most obviously glaring thing to do is &lt;strong&gt;NOT&lt;/strong&gt; make this event
happen via executing a JS script, but by simply &lt;strong&gt;SENDING A TAB&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Here’s the step:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;When&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^I unfocus field (.*?)$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;field_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;field&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;field_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;native&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send_keys&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:tab&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That did the trick, and now we all have an uncle Bob.&lt;/p&gt;

&lt;p&gt;Thanks Nic and JD&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Oct 2016 16:18:00 -0500</pubDate>
        <link>http://swaac.tamouse.org/testing/2016/10/10/testing-blur-events-in-cucumber-slash-capybara/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/testing/2016/10/10/testing-blur-events-in-cucumber-slash-capybara/</guid>
        
        <category>testing</category>
        
        <category>cucumber</category>
        
        <category>steps</category>
        
        <category>capybara</category>
        
        <category>blur</category>
        
        <category>focus</category>
        
        <category>using</category>
        
        <category>send_keys</category>
        
        
        <category>testing</category>
        
      </item>
    
      <item>
        <title>How to set up your own private git repository on a remote server</title>
        <description>&lt;p&gt;This is an old article from my ancient wiki. I thought it was good to
bring forward. Some of the git SaaS providers allow you to create
private repositories, which are probably a better idea for
collaboration, but this is a useful alternative when you don’t want to
go the SaaS route.&lt;/p&gt;

&lt;h2 id=&quot;have-a-local-repo&quot;&gt;Have a local repo&lt;/h2&gt;

&lt;p&gt;Let’s just create a simple local repo to work with.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git init my_project
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;my_project
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'My Project'&lt;/span&gt; &amp;gt; README.md
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git add .
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git commit -m &lt;span class=&quot;s1&quot;&gt;'initial'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Great, now let’s get on with the remote stuff.&lt;/p&gt;

&lt;h2 id=&quot;set-up-the-server&quot;&gt;Set up the server&lt;/h2&gt;

&lt;p&gt;First, if you haven’t done so already, add your public key to the
server:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Don’t do this if you’ve already uploaded your public ssh key!)&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ssh myuser@server.com &lt;span class=&quot;s1&quot;&gt;'mkdir -p .ssh'&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;cat .ssh/id_rsa.pub | ssh myuser@server.com &lt;span class=&quot;s1&quot;&gt;'cat &amp;gt;&amp;gt; .ssh/authorized_keys'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will let you use git push without having to supply your password
every time.&lt;/p&gt;

&lt;h2 id=&quot;add-your-repositories&quot;&gt;Add your repositories&lt;/h2&gt;

&lt;p&gt;Login to the server:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ssh myuser@server.com
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Create a directory to keep all your remote repos in one place&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;mkdir Repos
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;Repos
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now we can create our remote repository:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git init --bare my_project.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note that I’ve chosen to mirror the local project directory name. This
is a pretty good practice, less confusion, less decision making. In
addition, I’ve appended &lt;code class=&quot;highlighter-rouge&quot;&gt;.git&lt;/code&gt; to the remote repo directory name,
which helps inform those things that care that this is a git
repository.&lt;/p&gt;

&lt;p&gt;If you have a look in the directory just created, it looks just like
the &lt;code class=&quot;highlighter-rouge&quot;&gt;.git&lt;/code&gt; directory in your local project. Hence the extension.&lt;/p&gt;

&lt;p&gt;With all that done, you can log out of the server.&lt;/p&gt;

&lt;h2 id=&quot;configure-your-development-machine&quot;&gt;Configure your development machine&lt;/h2&gt;

&lt;p&gt;To use the remote repository, we have to add it to the remotes
available in the local repository.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git remote add origin myuser@server.com:Repos/my_project.git
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git push origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You’ll probably also want to make sure you add a default merge and
remote:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git config branch.master.remote origin
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git config branch.master.merge refs/heads/master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that’s it!&lt;/p&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-scm.com/docs/git-init&quot;&gt;git &lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt; command&lt;/a&gt; to find out
about the &lt;code class=&quot;highlighter-rouge&quot;&gt;--bare&lt;/code&gt; option.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 08 Oct 2016 00:22:00 -0500</pubDate>
        <link>http://swaac.tamouse.org/git/2016/10/08/how-to-set-up-your-own-private-remote-git-repository/</link>
        <guid isPermaLink="true">http://swaac.tamouse.org/git/2016/10/08/how-to-set-up-your-own-private-remote-git-repository/</guid>
        
        <category>git</category>
        
        <category>remote</category>
        
        <category>server</category>
        
        <category>private</category>
        
        <category>howto</category>
        
        <category>tutorial</category>
        
        <category>tools</category>
        
        
        <category>git</category>
        
      </item>
    
  </channel>
</rss>
<!-- touch 1 -->
