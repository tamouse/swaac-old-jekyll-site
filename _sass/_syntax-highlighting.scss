/**
 * Syntax highlighting styles
 */
$genericPrompt: #1ad627;
$genericStringColour: #d85b7a;
$genericIdentifierColour: #008080;
$genericNumberColour: #099;
$genericErrorColour: #F00;
$genericCommentColour: #998;
$specialCommentColour: darken($genericCommentColour, 20%);
$genericMediumColour: #555;
$genericBlueColour: #458;

.highlight {
  background: #222;
  color: #ccc;

  /* This happens when using Jekyll's highlight processor vs. code fences */
  pre { background-color: inherit; color: inherit; }

  td.code {
    width: 100%;
  }

  .c     { color: $genericCommentColour; font-style: italic } // Comment
  .err   { color: #a61717; background-color: #e3d2d2 } // Error
  .k     { font-weight: bold } // Keyword
  .o     { font-weight: bold } // Operator
  .cm    { color: $genericCommentColour; font-style: italic } // Comment.Multiline
  .cp    { color: $specialCommentColour; font-weight: bold } // Comment.Preproc
  .c1    { color: $genericCommentColour; font-style: italic } // Comment.Single
  .cs    { color: $specialCommentColour; font-weight: bold; font-style: italic } // Comment.Special
  .gd    { color: #000; background-color: #fdd } // Generic.Deleted
  .gd .x { color: #000; background-color: #faa } // Generic.Deleted.Specific
  .ge    { font-style: italic } // Generic.Emph
  .gr    { color: $genericErrorColour } // Generic.Error
  .gh    { color: $specialCommentColour } // Generic.Heading
  .gi    { color: #000; background-color: #dfd } // Generic.Inserted
  .gi .x { color: #000; background-color: #afa } // Generic.Inserted.Specific
  .go    { color: #888 } // Generic.Output
  .gp    { color: $genericPrompt } // Generic.Prompt
  .gs    { font-weight: bold } // Generic.Strong
  .gu    { color: #aaa } // Generic.Subheading
  .gt    { color: #a00 } // Generic.Traceback
  .kc    { font-weight: bold } // Keyword.Constant
  .kd    { font-weight: bold } // Keyword.Declaration
  .kp    { font-weight: bold } // Keyword.Pseudo
  .kr    { font-weight: bold } // Keyword.Reserved
  .kt    { color: $genericBlueColour; font-weight: bold } // Keyword.Type
  .m     { color: $genericNumberColour } // Literal.Number
  .s     { color: $genericStringColour } // Literal.String
  .na    { color: $genericIdentifierColour } // Name.Attribute
  .nb    { color: #0086B3 } // Name.Builtin
  .nc    { color: #458; font-weight: bold } // Name.Class
  .no    { color: $genericIdentifierColour } // Name.Constant
  .ni    { color: #800080 } // Name.Entity
  .ne    { color: lighten($genericIdentifierColour, 20%); font-weight: bold } // Name.Exception
  .nf    { color: lighten($genericIdentifierColour, 10%); font-weight: bold } // Name.Function
  .nn    { color: lighten($genericMediumColour, 20%) } // Name.Namespace
  .nt    { color: lighten($genericBlueColour, 20%) } // Name.Tag
  .nv    { color: $genericIdentifierColour } // Name.Variable
  .ow    { font-weight: bold } // Operator.Word
  .w     { color: #bbb } // Text.Whitespace
  .mf    { color: $genericNumberColour } // Literal.Number.Float
  .mh    { color: $genericNumberColour } // Literal.Number.Hex
  .mi    { color: $genericNumberColour } // Literal.Number.Integer
  .mo    { color: $genericNumberColour } // Literal.Number.Oct
  .sb    { color: $genericStringColour } // Literal.String.Backtick
  .sc    { color: $genericStringColour } // Literal.String.Char
  .sd    { color: $genericStringColour } // Literal.String.Doc
  .s2    { color: $genericStringColour } // Literal.String.Double
  .se    { color: $genericStringColour } // Literal.String.Escape
  .sh    { color: $genericStringColour } // Literal.String.Heredoc
  .si    { color: $genericStringColour } // Literal.String.Interpol
  .sx    { color: $genericStringColour } // Literal.String.Other
  .sr    { color: $genericStringColour } // Literal.String.Regex
  .s1    { color: $genericStringColour } // Literal.String.Single
  .ss    { color: $genericStringColour } // Literal.String.Symbol
  .bp    { color: $specialCommentColour } // Name.Builtin.Pseudo
  .vc    { color: $genericIdentifierColour } // Name.Variable.Class
  .vg    { color: $genericIdentifierColour } // Name.Variable.Global
  .vi    { color: $genericIdentifierColour } // Name.Variable.Instance
  .il    { color: $genericNumberColour } // Literal.Number.Integer.Long
}

pre.highlight > code { white-space: pre; overflow-x: auto; }